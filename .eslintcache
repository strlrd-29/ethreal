[{"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\index.js":"1","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\App.js":"2","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\reportWebVitals.js":"3","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\AuthRoute.js":"4","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\types.js":"5","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\theme.js":"6","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Navbar.js":"7","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\store.js":"8","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\ScrolleBar.js":"9","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Footer.js":"10","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Item.js":"11","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\home.js":"12","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Type.js":"13","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\signup.js":"14","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\login.js":"15","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\panel.js":"16","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\NavButton.js":"17","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Menu.js":"18","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Search.js":"19","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\ItemImage.js":"20","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\PanelItem.js":"21","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\uiReducer.js":"22","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\FilterSmall.js":"23","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\ItemCard.js":"24","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\FilterLarge.js":"25","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\MenuList.js":"26","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\index.js":"27","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\typesReducer.js":"28","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\usersReducer.js":"29","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\itemsReducer.js":"30","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\storesReducer.js":"31","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\commandsReducer.js":"32","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\typesActions.js":"33","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\storesActions.js":"34","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\itemsActions.js":"35","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\userActions.js":"36","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\cartReducer.js":"37","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\cartActions.js":"38","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\user.js":"39","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\admin.js":"40","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\adminRoute.js":"41","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\AdminRoute.js":"42","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\UserRoute.js":"43","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\commandsActions.js":"44","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Store.js":"45","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\StoreImage.js":"46","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\TypeCard.js":"47","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\ItemCardOne.js":"48","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\ScrollebarAdmin.js":"49","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\NavbarAdmin.js":"50","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\shop.js":"51","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\commands.js":"52","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\website.js":"53","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\StoresTab.js":"54","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\TypesTab.js":"55","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\ItemsTab.js":"56","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\EditItem.js":"57","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\ItemImageEdit.js":"58","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\DeleteStore.js":"59","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\CreateStore.js":"60","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\DeleteItem.js":"61","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\EditStore.js":"62","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\CreateType.js":"63","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\CreateItem.js":"64","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\EditType.js":"65","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\DeleteType.js":"66","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\CommandTab.js":"67","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\AccepteCommand.js":"68","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\RefuseCommand.js":"69"},{"size":725,"mtime":1612339200000,"results":"70","hashOfConfig":"71"},{"size":3477,"mtime":1612357682988,"results":"72","hashOfConfig":"71"},{"size":398,"mtime":1612339200000,"results":"73","hashOfConfig":"71"},{"size":693,"mtime":1612339200000,"results":"74","hashOfConfig":"71"},{"size":1226,"mtime":1612339200000,"results":"75","hashOfConfig":"71"},{"size":946,"mtime":1612339200000,"results":"76","hashOfConfig":"71"},{"size":8122,"mtime":1612339200000,"results":"77","hashOfConfig":"71"},{"size":908,"mtime":1612339200000,"results":"78","hashOfConfig":"71"},{"size":1318,"mtime":1612339200000,"results":"79","hashOfConfig":"71"},{"size":2163,"mtime":1612339200000,"results":"80","hashOfConfig":"71"},{"size":14939,"mtime":1612339200000,"results":"81","hashOfConfig":"71"},{"size":802,"mtime":1612339200000,"results":"82","hashOfConfig":"71"},{"size":4935,"mtime":1612339200000,"results":"83","hashOfConfig":"71"},{"size":8251,"mtime":1612339200000,"results":"84","hashOfConfig":"71"},{"size":4166,"mtime":1612339200000,"results":"85","hashOfConfig":"71"},{"size":6715,"mtime":1612339200000,"results":"86","hashOfConfig":"71"},{"size":4034,"mtime":1612339200000,"results":"87","hashOfConfig":"71"},{"size":2020,"mtime":1612339200000,"results":"88","hashOfConfig":"71"},{"size":4520,"mtime":1612339200000,"results":"89","hashOfConfig":"71"},{"size":3782,"mtime":1612339200000,"results":"90","hashOfConfig":"71"},{"size":4246,"mtime":1612339200000,"results":"91","hashOfConfig":"71"},{"size":699,"mtime":1612339200000,"results":"92","hashOfConfig":"71"},{"size":1693,"mtime":1612339200000,"results":"93","hashOfConfig":"71"},{"size":5543,"mtime":1612339200000,"results":"94","hashOfConfig":"71"},{"size":8266,"mtime":1612339200000,"results":"95","hashOfConfig":"71"},{"size":2842,"mtime":1612339200000,"results":"96","hashOfConfig":"71"},{"size":580,"mtime":1612339200000,"results":"97","hashOfConfig":"71"},{"size":242,"mtime":1612339200000,"results":"98","hashOfConfig":"71"},{"size":1219,"mtime":1612339200000,"results":"99","hashOfConfig":"71"},{"size":242,"mtime":1612339200000,"results":"100","hashOfConfig":"71"},{"size":246,"mtime":1612339200000,"results":"101","hashOfConfig":"71"},{"size":326,"mtime":1612388357888,"results":"102","hashOfConfig":"71"},{"size":1432,"mtime":1612339200000,"results":"103","hashOfConfig":"71"},{"size":1432,"mtime":1612339200000,"results":"104","hashOfConfig":"71"},{"size":1416,"mtime":1612339200000,"results":"105","hashOfConfig":"71"},{"size":3568,"mtime":1612339200000,"results":"106","hashOfConfig":"71"},{"size":1200,"mtime":1612339200000,"results":"107","hashOfConfig":"71"},{"size":1152,"mtime":1612339200000,"results":"108","hashOfConfig":"71"},{"size":5594,"mtime":1612339200000,"results":"109","hashOfConfig":"71"},{"size":2282,"mtime":1612339200000,"results":"110","hashOfConfig":"71"},{"size":941,"mtime":1610823551624,"results":"111","hashOfConfig":"71"},{"size":831,"mtime":1612339200000,"results":"112","hashOfConfig":"71"},{"size":858,"mtime":1612339200000,"results":"113","hashOfConfig":"71"},{"size":1790,"mtime":1612388299162,"results":"114","hashOfConfig":"71"},{"size":5259,"mtime":1612339200000,"results":"115","hashOfConfig":"71"},{"size":4071,"mtime":1612339200000,"results":"116","hashOfConfig":"71"},{"size":3252,"mtime":1612339200000,"results":"117","hashOfConfig":"71"},{"size":6331,"mtime":1612339200000,"results":"118","hashOfConfig":"71"},{"size":1333,"mtime":1612339200000,"results":"119","hashOfConfig":"71"},{"size":6545,"mtime":1612339200000,"results":"120","hashOfConfig":"71"},{"size":14089,"mtime":1612342015715,"results":"121","hashOfConfig":"71"},{"size":2077,"mtime":1612339200000,"results":"122","hashOfConfig":"71"},{"size":2074,"mtime":1612339200000,"results":"123","hashOfConfig":"71"},{"size":2507,"mtime":1612362122662,"results":"124","hashOfConfig":"71"},{"size":2476,"mtime":1612358563509,"results":"125","hashOfConfig":"71"},{"size":2717,"mtime":1612339200000,"results":"126","hashOfConfig":"71"},{"size":12355,"mtime":1612356075773,"results":"127","hashOfConfig":"71"},{"size":6878,"mtime":1612339200000,"results":"128","hashOfConfig":"71"},{"size":2348,"mtime":1612362270249,"results":"129","hashOfConfig":"71"},{"size":8520,"mtime":1612361839024,"results":"130","hashOfConfig":"71"},{"size":2337,"mtime":1612339200000,"results":"131","hashOfConfig":"71"},{"size":8946,"mtime":1612383852210,"results":"132","hashOfConfig":"71"},{"size":9462,"mtime":1612358388256,"results":"133","hashOfConfig":"71"},{"size":11994,"mtime":1612356363412,"results":"134","hashOfConfig":"71"},{"size":9965,"mtime":1612360283231,"results":"135","hashOfConfig":"71"},{"size":2340,"mtime":1612358741886,"results":"136","hashOfConfig":"71"},{"size":11387,"mtime":1612391655646,"results":"137","hashOfConfig":"71"},{"size":2445,"mtime":1612387367567,"results":"138","hashOfConfig":"71"},{"size":2396,"mtime":1612388011087,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},"1nvs2xl",{"filePath":"144","messages":"145","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"143"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"143"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"143"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"143"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"143"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"143"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"143"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"143"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"143"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"143"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"143"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"143"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"143"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"143"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"143"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"143"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"143"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"143"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"143"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"143"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"143"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"143"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"143"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"143"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"143"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"143"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"143"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"143"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"143"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"143"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"143"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"143"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"143"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"143"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"143"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"143"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"143"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\index.js",["317"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n//react router dom\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["318","319"],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\App.js",["320","321","322","323","324","325","326","327","328","329"],"import React, { useEffect } from \"react\";\n\nimport Divider from \"@material-ui/core/Divider\";\n\nimport axios from \"axios\";\n\nimport ReactGa from \"react-ga\";\nimport { Route, Switch, useHistory, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport {\n  ThemeProvider as MuiThemeProvider,\n  responsiveFontSizes,\n} from \"@material-ui/core\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport jwtDecode from \"jwt-decode\";\n//util\nimport AuthRoute from \"./util/AuthRoute\";\nimport themeObject from \"./util/theme\";\n\nimport AdminRoute from \"./util/AdminRoute\";\n\nimport UserRoute from \"./util/UserRoute\";\n\n//redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout, getUserData } from \"./redux/actions/userActions\";\n// components admin\nimport ScrollebarAdmin from \"./component/admin/ScrollebarAdmin\";\n\n//components\nimport ScrolleBar from \"./component/ScrolleBar\";\nimport Footer from \"./component/Footer\";\n\nimport Store from \"./component/Store\";\nimport Type from \"./component/Type\";\nimport Item from \"./component/Item\";\n\n//pages\nimport home from \"./pages/home\";\nimport Panel from \"./pages/panel\";\nimport user from \"./pages/user\";\nimport random from \"./pages/commands\";\nimport shop from \"./pages/shop\";\n\n//app bar scroll\n\nimport Signup from \"./pages/signup\";\nimport login from \"./pages/login\";\nimport admin from \"./pages/admin\";\nimport { CLEAR_ERRORS, SET_ADMIN_NAV, UNSET_ADMIN_NAV } from \"./redux/types\";\nimport commands from \"./pages/commands\";\nimport website from \"./pages/website\";\n\n//mui stuff\nimport Button from \"@material-ui/core/Button\";\n\nlet theme = createMuiTheme(themeObject);\ntheme = responsiveFontSizes(theme);\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { adminNav } = useSelector((state) => state.user);\n  const history = useHistory();\n  useEffect(() => {\n    const token = localStorage.FBIdToken;\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      if (decodedToken.exp * 10000 < Date.now()) {\n        dispatch(logout(history));\n      } else {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n        dispatch(getUserData());\n      }\n    }\n\n    ReactGa.initialize(\"G-8RFM869L4K\");\n    ReactGa.pageview(\"/\");\n  }, [dispatch]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"container\">\n        {adminNav ? (\n          <div style={{ padding: 0 }}>\n            <Button\n              style={{ fontSize: \"2em\", borderRadius: 0 }}\n              variant=\"contained\"\n              color=\"primary\"\n              component={Link}\n              onClick={(event) => {\n                event.preventDefault();\n                history.push(\"/\");\n              }}\n            >\n              Ethereal\n            </Button>\n          </div>\n        ) : (\n          <ScrolleBar />\n        )}\n        <Switch>\n          <Route exact path=\"/\" component={home} />\n          <Route exact path=\"/collection/:title\" component={Store} />\n          <Route exact path=\"/type/:title\" component={Type} />\n          <Route exact path=\"/type/:type/:title\" component={Item} />\n          <Route exact path=\"/panel\" component={Panel} />\n          <UserRoute path=\"/user\" component={user} />\n\n          <AdminRoute exact path=\"/admin\" component={shop} />\n\n          <AuthRoute path=\"/signup\" component={Signup} />\n          <AuthRoute path=\"/login\" component={login} />\n        </Switch>\n      </div>\n      <Divider />\n    </MuiThemeProvider>\n  );\n};\n// <Footer />\nexport default App;\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\reportWebVitals.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\AuthRoute.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\types.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\theme.js",["330"],"export default {\n  palette: {\n    primary: {\n      light: \"#c033ec\",\n      main: \"#b100e8\",\n      dark: \"#7b00a2\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#54b0a5\",\n      main: \"#2a9d8f\",\n      dark: \"#1d6d64\",\n      contrastText: \"#fff\",\n    },\n    error: {\n      main: \"#f25f5c\",\n    },\n  },\n  spreadthis: {\n    typography: {\n      useNextVariants: true,\n    },\n    Card: {\n      textAlign: \"center\",\n      marginTop: 35,\n      marginBottom: 50,\n    },\n    title: {\n      marginTop: 20,\n    },\n    form: {\n      textAlign: \"center\",\n      margin: 20,\n    },\n    button: {\n      margin: 15,\n      position: \"relative\",\n    },\n    textField: {\n      marginTop: 20,\n    },\n\n    errField: {\n      margin: 20,\n      fontSize: \"1.2em\",\n      fontWeight: \"200\",\n      backgroundColor: \"#fcebeb\",\n    },\n    spiner: {\n      position: \"absolute\",\n    },\n    link: {\n      textAlign: \"left\",\n      marginTop: 40,\n    },\n  },\n};\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Navbar.js",["331"],"import React, { Component, Fragment } from \"react\";\nimport Media from \"react-media\";\n\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport NavButton from \"./NavButton\";\nimport Search from \"./Search\";\nimport Menu from \"./Menu\";\n\n//MUI stuff\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Badge from \"@material-ui/core/Badge\";\n\n//icons mui\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport ShoppingBasketOutlinedIcon from \"@material-ui/icons/ShoppingBasketOutlined\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  list: {\n    width: 300,\n  },\n  toolbar: {\n    minHeight: 128,\n  },\n\n  navbar: {\n    backgroundColor: \"white\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  spacer: {\n    flex: 1,\n  },\n  logo: {\n    height: \"60px\",\n    fontSize: \"2em\",\n  },\n  items: {\n    height: 55,\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  item: {\n    display: \"flex\",\n    // flexDirection: \"row-reverse\",\n    fontSize: \"1.2em\",\n    color: \"#003668\",\n  },\n  sign: {\n    marginRight: 20,\n  },\n});\n\nclass Navbar extends Component {\n  state = {\n    left: false,\n    value: undefined,\n    open: false,\n  };\n\n  handleChangeMenu = (event, newValue) => {\n    this.setState({ value: newValue });\n  };\n  handleChangeHome = (event) => {\n    this.setState({ value: undefined });\n  };\n\n  toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    this.setState({ [anchor]: open });\n  };\n\n  render() {\n    const { classes, stores, types, authenticated, cart } = this.props;\n    let badge = cart.reduce((acc, obj) => acc + obj.quantity, 0);\n\n    let allStores = stores ? (\n      Object.keys(stores).map((post) => {\n        return <NavButton store={stores[post]} types={types}  />;\n      })\n    ) : (\n      <Grid item xs={12} align=\"center\">\n        <h2>NO STORE AVAILABLE</h2>\n      </Grid>\n    );\n\n    let signed = authenticated;\n    return (\n      <div>\n        <Media\n          queries={{\n            small: \"(max-width: 1010px)\",\n            large: \"(min-width: 1010px)\",\n          }}\n        >\n          {(matches) => (\n            <Fragment>\n              {matches.small && (\n                <Toolbar className=\".nav-container\">\n                  <Grid container>\n                    <Grid container xs={12} direction=\"row\">\n                      <Grid\n                        container\n                        xs={4}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                      >\n                        <Menu storesData={stores} types={types} />\n                        <Search />\n                      </Grid>\n\n                      <Grid container xs={4} justify=\"center\">\n                        <Button\n                          className={classes.logo}\n                          color=\"primary\"\n                          component={Link}\n                          to=\"/\"\n                          onClick={this.handleChangeHome}\n                        >\n                          ETHE\n                        </Button>\n                      </Grid>\n\n                      <Grid\n                        container\n                        xs={4}\n                        justify=\"flex-end\"\n                        alignItems=\"center\"\n                      >\n                        \n\n                        <IconButton\n                          component={Link}\n                          to=\"/panel\"\n                          style={{\n                            color: \"black\",\n                            backgroundColor: \"transparent\",\n                            textTransform: \"none\",\n                          }}\n                        >\n                          <Badge\n                            color=\"primary\"\n                            badgeContent={badge}\n                            anchorOrigin={{\n                              vertical: \"bottom\",\n                              horizontal: \"right\",\n                            }}\n                          >\n                            <ShoppingBasketOutlinedIcon fontSize=\"medium\" />\n                          </Badge>\n                        </IconButton>\n\n                        <IconButton\n                          component={Link}\n                          to=\"/login\"\n                          style={{\n                            color: \"black\",\n                            backgroundColor: \"transparent\",\n                            textTransform: \"none\",\n                          }}\n                        >\n                          <PermIdentityIcon fontSize=\"medium\" />\n                        </IconButton>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Toolbar>\n              )}\n              {matches.large && (\n                <Toolbar className=\"nav-container\">\n                  <Grid container>\n                    <Grid\n                      container\n                      xs={12}\n                      direction=\"row\"\n                      justify=\"space-between\"\n                    >\n                      <Grid\n                        container\n                        xs={2}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                      >\n                        <Button\n                          className={classes.logo}\n                          color=\"primary\"\n                          component={Link}\n                          to=\"/\"\n                          onClick={this.handleChangeHome}\n                        >\n                          ETHEREAL\n                        </Button>\n                      </Grid>\n                      <Grid container xs={8} justify=\"center\">\n                        {allStores}\n                      </Grid>\n\n                      <Grid container xs justify=\"flex-end\" alignItems=\"center\">\n                        <Search />\n\n                        <IconButton\n                          component={Link}\n                          to=\"/panel\"\n                          style={{\n                            color: \"black\",\n                            backgroundColor: \"transparent\",\n                            textTransform: \"none\",\n                          }}\n                        >\n                          <Badge\n                            color=\"primary\"\n                            badgeContent={badge}\n                            anchorOrigin={{\n                              vertical: \"bottom\",\n                              horizontal: \"right\",\n                            }}\n                          >\n                            <ShoppingBasketOutlinedIcon\n                              style={{ fontSize: \"1.2em\" }}\n                            />\n                          </Badge>\n                        </IconButton>\n\n                        <IconButton\n                          component={Link}\n                          to=\"/login\"\n                          style={{\n                            color: \"black\",\n                            backgroundColor: \"transparent\",\n                            textTransform: \"none\",\n                          }}\n                        >\n                          <PermIdentityIcon style={{ fontSize: \"1.2em\" }} />\n                        </IconButton>\n                      </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" justify=\"center\"></Grid>\n                  </Grid>\n                </Toolbar>\n              )}\n            </Fragment>\n          )}\n        </Media>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stores: state.stores,\n  types: state.types,\n  user: state.user,\n  cart: state.cart,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Navbar));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\store.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\ScrolleBar.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Footer.js",["332","333","334","335"],"import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\n//mui\nimport Grid from \"@material-ui/core/Grid\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, CardContent } from \"@material-ui/core\";\n\nexport class Footer extends Component {\n  render() {\n    return (\n      <Grid container style={{ padding: 30, backgroundColor: \"none\" }}>\n        <Grid item xs={12} md={6} align=\"center\" style={{ marginBottom: 20 }}>\n          <IconButton href=\"\">\n            {\" \"}\n            <FacebookIcon style={{ color: \"#414042\" }} fontSize=\"large\" />\n          </IconButton>\n          <IconButton>\n            {\" \"}\n            <InstagramIcon style={{ color: \"#414042\" }} fontSize=\"large\" />{\" \"}\n          </IconButton>\n          <IconButton>\n            {\" \"}\n            <YouTubeIcon style={{ color: \"#414042\" }} fontSize=\"large\" />{\" \"}\n          </IconButton>\n          <IconButton>\n            {\" \"}\n            <TwitterIcon style={{ color: \"#414042\" }} fontSize=\"large\" />{\" \"}\n          </IconButton>\n        </Grid>\n        <Grid item xs={12} md={6} align=\"center\">\n          <Typography\n            style={{ color: \"#414042\", fontWeight: \"bold\", fontSize: \"1.2em\" }}\n          >\n            +213 792 938 880\n          </Typography>\n          <a\n            style={{ color: \"#7451eb\", fontWeight: \"bold\", fontSize: \"1.2em\" }}\n            target=\"_blank\"\n            href=\"https://mail.google.com/mail/u/0/?hl=fr&view=cm&tf=1&fs=1&to=ishaktobi%40gmail.com\"\n          >\n            ishaktobi@gmail.com\n          </a>\n        </Grid>\n        <Grid item xs={12} align=\"center\" style={{ marginTop: 20 }}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {\" \"}\n            Copyright 2020 by Ishak Tobbi. All Rights Reserved.\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Footer;\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Item.js",["336","337","338"],"import React, { Component, Fragment } from \"react\";\n\nimport { getWebsiteData } from \"../redux/actions/userActions\";\nimport ItemImage from \"./ItemImage\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Media from \"react-media\";\n\nimport { connect } from \"react-redux\";\n\n// ui\nimport Rating from \"@material-ui/lab/Rating\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\nimport RemoveOutlinedIcon from \"@material-ui/icons/RemoveOutlined\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Button } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\nimport MonetizationOnOutlinedIcon from \"@material-ui/icons/MonetizationOnOutlined\";\nimport HistoryOutlinedIcon from \"@material-ui/icons/HistoryOutlined\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n//redux\nimport store from \"../redux/store\";\nimport { addToCart } from \"../redux/actions/cartActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  noprogram: {\n    height: 250,\n    width: 250,\n  },\n  noProgContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    marginBottom: 20,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 100,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      minWidth: 50,\n      maxWidth: 50,\n    },\n  },\n});\nclass Item extends Component {\n  state = {\n    posts: \"\",\n    quantity: 0,\n    size: \"\",\n  };\n\n  handleChangeSize = (event) => {\n    this.setState({ size: event.target.value });\n  };\n  handleQuantityPlus = (event) => {\n    this.setState({ quantity: this.state.quantity + 1 });\n  };\n  handleQuantityMinus = (event) => {\n    if (this.state.quantity != 0)\n      this.setState({ quantity: this.state.quantity - 1 });\n  };\n  handleAdd = (item, quantity) => {\n    if (quantity) {\n      store.dispatch(addToCart(item, quantity));\n    } else {\n      alert(\"please add your quantity\");\n    }\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  render() {\n    let ourTitle = window.location.href.split(\"/\")[5].replace(/_/g, \" \");\n    const { classes, items } = this.props;\n\n    let ourItem;\n\n    items.map((post) => {\n      if (post.title == ourTitle) {\n        return (ourItem = post);\n      }\n    });\n\n    let newPrice = ourItem.promotion\n      ? ourItem.price -\n        (ourItem.price * ourItem.pourcentagePromotion) / 100 +\n        \" DZD\"\n      : null;\n\n    return (\n      <Grid container direction=\"column\" alignItems=\"center\">\n\n        <Grid container xs={12} md={10} style={{marginTop:20,marginBottom:30}}>\n            <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n              <Link color=\"inherit\" href=\"/\" >\n                  Home\n              </Link>\n              <Link color=\"inherit\" href={`/collection/${ourItem.store.split(\" \").join(\"_\")}`} >\n                  {ourItem.store}\n              </Link>\n              <Link color=\"inherit\" href={`/type/${ourItem.type.split(\" \").join(\"_\")}`} >\n                  {ourItem.type}\n              </Link>\n              <Typography color=\"textPrimary\">{ourItem.title}</Typography>\n            </Breadcrumbs>\n        </Grid>\n\n        <Grid container xs={12} md={10}>\n          <Grid item md={6} xs={12}>\n            <ItemImage  itemStore={ourItem.store} itemImages={ourItem.itemImagesUrl} />\n          </Grid>\n          <Grid container md={5} xs={12} style={{ padding: 10 }}>\n            <Grid item xs={12} style={{ marginBottom: 30 }}>\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                ref: {ourItem.ref}{\" \"}\n              </Typography>\n              <Typography variant=\"h4\" color=\"textPrimary\">\n                {ourItem.title}\n              </Typography>\n              <Rating\n                name=\"read-only\"\n                style={{ marginTop: 10 }}\n                precision={0.5}\n                value={ourItem.rate}\n                readOnly\n              />\n            </Grid>\n            <Grid item xs={12} style={{ marginBottom: 30 }}>\n              <Typography\n                style={{ marginBottom: 10 }}\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                Description\n              </Typography>\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {ourItem.description}\n              </Typography>\n            </Grid>\n            <Grid\n              container\n              xs={12}\n              direction=\"row\"\n              alignItems=\"flex-end\"\n              style={{ padding: 0, marginBottom: 20 }}\n            >\n              <Typography\n                style={{ fontWeight: \"bold\" }}\n                variant=\"h5\"\n                color=\"primary\"\n              >\n                {newPrice}\n              </Typography>\n              <Typography\n                variant={ourItem.promotion ? \"body1\" : \"h5\"}\n                color={ourItem.promotion ? \"textSecondary\" : \"primary\"}\n                style={\n                  ourItem.promotion\n                    ? { textDecoration: \"line-through\", marginLeft: 20 }\n                    : { fontWeight: \"bold\" }\n                }\n              >\n                {ourItem.price + \" DZD\"}\n              </Typography>\n            </Grid>\n\n            <Media\n              queries={{\n                small: \"(max-width: 799px)\",\n                large: \"(min-width: 799px)\",\n              }}\n            >\n              {(matches) => (\n                <Fragment>\n                  {matches.small && (\n                    <Grid\n                      container\n                      xs={12}\n                      direction=\"row\"\n                      alignItems=\"center\"\n                      style={{ marginBottom: 30 }}\n                    >\n                      <Grid\n                        container\n                        xs={10}\n                        justify=\"space-between\"\n                        alignItems=\"center\"\n                        style={{ marginRight: 20 }}\n                      >\n                        <Typography variant=\"h6\" color=\"textPrimary\">\n                          Size :{\" \"}\n                        </Typography>\n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"demo-simple-select-filled-label\"\n                            id=\"demo-simple-select-filled\"\n                            value={this.state.size}\n                            onChange={this.handleChangeSize}\n                          >\n                            <MenuItem value=\"\">\n                              <em>None</em>\n                            </MenuItem>\n                            <MenuItem value={40}>42</MenuItem>\n                            <MenuItem value={41}>43</MenuItem>\n                            <MenuItem value={42}>44</MenuItem>\n                          </Select>\n                        </FormControl>\n                      </Grid>\n\n                      <Grid\n                        container\n                        xs={12}\n                        justify=\"space-between\"\n                        alignItems=\"center\"\n                        style={{ marginRight: 20 }}\n                      >\n                        <Typography variant=\"h6\" color=\"textPrimary\">\n                          Q-ty :{\" \"}\n                        </Typography>\n                        <div style={{ display: \"flex\" }}>\n                          <Button\n                            color=\"primary\"\n                            style={{ height: \"100\" }}\n                            onClick={this.handleQuantityMinus}\n                          >\n                            <RemoveOutlinedIcon\n                              fontSize=\"large\"\n                              color=\"primary\"\n                            />\n                          </Button>\n                          <form noValidate autoComplete=\"off\">\n                            <TextField\n                              id=\"outlined-basic\"\n                              type=\"number\"\n                              variant=\"outlined\"\n                              style={{ width: 70 }}\n                              value={this.state.quantity}\n                              disabled\n                              labelwidth={10}\n                              inputProps={{ readOnly: true, min: 0 }}\n                            />\n                          </form>\n                          <Button\n                            style={{ height: \"100\" }}\n                            color=\"primary\"\n                            onClick={this.handleQuantityPlus}\n                          >\n                            <AddOutlinedIcon color=\"primary\" fontSize=\"large\" />\n                          </Button>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  )}\n                  {matches.large && (\n                    <Grid\n                      container\n                      xs={12}\n                      direction=\"column\"\n                     // alignItems=\"center\"\n                      style={{ marginBottom: 30 }}\n                    >\n                      <Grid\n                        container\n                        xs={12}\n                        direction=\"row\"\n                        alignItems=\"center\"\n                        style={{ marginRight: 20 }}\n                      >\n                        \n                        <FormControl\n                          variant=\"outlined\"\n                          className={classes.formControl}\n                        >\n                          <Select\n                            labelId=\"demo-simple-select-filled-label\"\n                            id=\"demo-simple-select-filled\"\n                            label=\"Size\"\n                            value={this.state.size}\n                            onChange={this.handleChangeSize}\n                          >\n                            <MenuItem value=\"\">\n                              <em>None</em>\n                            </MenuItem>\n                            <MenuItem value={40}>42</MenuItem>\n                            <MenuItem value={41}>43</MenuItem>\n                            <MenuItem value={42}>44</MenuItem>\n                          </Select>\n                        </FormControl>\n                      </Grid>\n\n                      <Grid\n                        container\n                        xs\n                        alignItems=\"center\"\n                        style={{ marginRight: 20 }}\n                      >\n                        \n                        <div style={{ display: \"flex\" }}>\n                          <Button\n                            color=\"primary\"\n                            style={{ height: \"100\" }}\n                            onClick={this.handleQuantityMinus}\n                          >\n                            <RemoveOutlinedIcon\n                              fontSize=\"large\"\n                              color=\"primary\"\n                            />\n                          </Button>\n                          <form noValidate autoComplete=\"off\">\n                            <TextField\n                              id=\"outlined-basic\"\n                              type=\"number\"\n                              variant=\"outlined\"\n                              style={{ width: 70 }}\n                              value={this.state.quantity}\n                              disabled\n                              labelwidth={10}\n                              inputProps={{ readOnly: true, min: 0 }}\n                            />\n                          </form>\n                          <Button\n                            style={{ height: \"100\" }}\n                            color=\"primary\"\n                            onClick={this.handleQuantityPlus}\n                          >\n                            <AddOutlinedIcon color=\"primary\" fontSize=\"large\" />\n                          </Button>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  )}\n                </Fragment>\n              )}\n            </Media>\n\n            <Grid item xs={12}>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => this.handleAdd(ourItem, this.state.quantity)}\n                style={{\n                  fontSize: \"1.5em\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  borderRadius: 0,\n                }}\n              >\n                ADD TO CART\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} md={1}></Grid>\n        </Grid>\n        <Grid container xs={12} justify=\"center\" style={{ margin: 20 }}>\n          <Grid\n            container\n            xs={12}\n            md={3}\n            direction=\"column\"\n            justify=\"center\"\n            align=\"center\"\n            style={{ margin: 20 }}\n          >\n            <Grid item xs={12}>\n              <LocalMallOutlinedIcon fontSize=\"large\" />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography>Produit Original</Typography>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            xs={12}\n            md={3}\n            direction=\"column\"\n            justify=\"center\"\n            align=\"center\"\n            style={{ margin: 20 }}\n          >\n            <Grid item xs={12}>\n              <MonetizationOnOutlinedIcon fontSize=\"large\" />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography>Paiement à la livraison</Typography>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            xs={12}\n            md={3}\n            direction=\"column\"\n            justify=\"center\"\n            align=\"center\"\n            style={{ margin: 20 }}\n          >\n            <Grid item xs={12}>\n              <HistoryOutlinedIcon fontSize=\"large\" />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography>Livraison de 1 à 7 jours</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  types: state.types,\n  items: state.items,\n  UI: state.ui,\n});\n\nexport default connect(mapStateToProps, { getWebsiteData })(\n  withStyles(styles)(Item)\n);\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\home.js",["339","340"],"import React, { useEffect } from \"react\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\n\n//redux\nimport { useDispatch } from \"react-redux\";\nimport { getWebsiteData } from \"../redux/actions/userActions\";\n//image\n\n// ui\n\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getWebsiteData());\n    window.scrollTo(0, 0);\n  }, []);\n  return (\n    <Grid container>\n      <Grid container>\n        <h1>hey you x)</h1>\n      </Grid>\n    </Grid>\n  );\n};\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(Home);\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Type.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\signup.js",["341"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n//redux\nimport { connect } from \"react-redux\";\nimport { signup } from \"../redux/actions/userActions\";\n\n//mui stuff\nimport Grid from \"@material-ui/core/Grid\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = (theme) => ({\n  ...theme.spreadthis,\n});\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nom: \"\",\n      prenom: \"\",\n      handle: \"\",\n      email: \"\",\n      adress: \"\",\n      city: \"\",\n      wilaya: \"\",\n      phone: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      condition: false,\n      errors: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.ui.errors) {\n      this.setState({ errors: nextProps.ui.errors });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.condition) {\n      const newUserData = {\n        nom: this.state.nom,\n        prenom: this.state.prenom,\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle,\n        adress: this.state.adress,\n        city: this.state.city,\n        wilaya: this.state.wilaya,\n        phone: this.state.phone,\n      };\n      this.props.signup(newUserData, this.props.history);\n    } else {\n      const err = {\n        conditionError:\n          \"Veuillez cocher cette case si vous souhaitez continuer.\",\n      };\n      this.setState({ errors: err });\n    }\n  };\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  boxHandleChange = (event) => {\n    this.setState({ condition: !this.state.condition });\n  };\n  render() {\n    const {\n      classes,\n      ui: { loading },\n    } = this.props;\n    const { errors, condition } = this.state;\n\n    return (\n      <Grid container className=\"sign\">\n        <Grid item sm xs />\n        <Grid item sm={5} xs={10}>\n          <Card className={classes.Card}>\n            {loading && (\n              <LinearProgress\n                size={30}\n                color=\"secondary\"\n                className={classes.spiner}\n              />\n            )}\n            <Typography\n              variant=\"h4\"\n              style={{ color: \"#414042\" }}\n              className={classes.title}\n            >\n              Inscription\n            </Typography>\n\n            <form className={classes.form} onSubmit={this.handleSubmit}>\n              <TextField\n                id=\"handle\"\n                type=\"texte\"\n                name=\"handle\"\n                label=\"Nom d'utilisateur\"\n                className={classes.textField}\n                value={this.state.handle}\n                onChange={this.handleChange}\n                fullWidth\n                required\n                autoFocus\n              />\n              <TextField\n                id=\"nom\"\n                type=\"texte\"\n                name=\"nom\"\n                label=\"Nom\"\n                className={classes.textField}\n                value={this.state.nom}\n                onChange={this.handleChange}\n                fullWidth\n                required\n              />\n              <TextField\n                id=\"prenom\"\n                type=\"texte\"\n                name=\"prenom\"\n                label=\"prenom\"\n                className={classes.textField}\n                value={this.state.prenom}\n                onChange={this.handleChange}\n                fullWidth\n                required\n              />\n              <TextField\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                className={classes.textField}\n                value={this.state.email}\n                onChange={this.handleChange}\n                fullWidth\n                required\n              />\n              <TextField\n                id=\"adress\"\n                type=\"text\"\n                name=\"adress\"\n                label=\"Adress\"\n                className={classes.textField}\n                value={this.state.adress}\n                onChange={this.handleChange}\n                fullWidth\n                required\n              />\n              <TextField\n                id=\"city\"\n                type=\"text\"\n                name=\"city\"\n                label=\"City\"\n                className={classes.textField}\n                value={this.state.city}\n                onChange={this.handleChange}\n                fullWidth\n                required\n              />\n              <TextField\n                id=\"wilaya\"\n                type=\"text\"\n                name=\"wilaya\"\n                label=\"Wilaya\"\n                className={classes.textField}\n                value={this.state.wilaya}\n                onChange={this.handleChange}\n                fullWidth\n                required\n              />\n              <TextField\n                id=\"phone\"\n                type=\"text\"\n                name=\"phone\"\n                label=\"Phone number\"\n                className={classes.textField}\n                value={this.state.phone}\n                onChange={this.handleChange}\n                fullWidth\n                required\n              />\n              <TextField\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                label=\"Mot de passe\"\n                className={classes.textField}\n                value={this.state.password}\n                onChange={this.handleChange}\n                fullWidth\n                required\n              />\n              <TextField\n                id=\"confirmPassword\"\n                type=\"password\"\n                name=\"confirmPassword\"\n                label=\"Confirmer le Mot de passe\"\n                className={classes.textField}\n                value={this.state.confirmPassword}\n                onChange={this.handleChange}\n                fullWidth\n                required\n              />\n              <Typography\n                variant=\"body2\"\n                color=\"textSecondary\"\n                className={classes.link}\n              >\n                <Checkbox\n                  value={!this.state.condition}\n                  onChange={this.boxHandleChange}\n                  name=\"condition\"\n                />\n                J'ai lu et j'accepte\n                <Link to=\"/condition\">\n                  {\" \"}\n                  les Conditions Générales d'Utilisation\n                </Link>\n                <br />\n              </Typography>\n              {errors.conditionError && (\n                <Typography component={\"span\"} variant=\"body2\" color=\"error\">\n                  Veuillez cocher cette case si vous souhaitez continuer.\n                </Typography>\n              )}\n\n              <br />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n                className={classes.button}\n                disabled={loading}\n              >\n                S'INSCRIRE\n              </Button>\n\n              <br />\n              <small>\n                Vous avez déjà un compte ?{\" \"}\n                <Link to=\"/login\">Connectez-vous</Link>{\" \"}\n              </small>\n            </form>\n          </Card>\n        </Grid>\n        <Grid item sm xs />\n      </Grid>\n    );\n  }\n}\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  signupUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  ui: state.ui,\n});\n\nexport default connect(mapStateToProps, { signup })(\n  withStyles(styles)(withRouter(Signup))\n);\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\login.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\panel.js",["342","343","344"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport PanelItem from \"../component/PanelItem\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport { makeCommand } from \"../redux/actions/commandsActions\";\n//image\n\n// ui\nimport Divider from \"@material-ui/core/Divider\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { clearAllCart } from \"../redux/actions/cartActions\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nconst Cart = ({ classes }) => {\n  let command = {\n    quantities: [],\n    titles: [],\n    prices: [],\n    itemsId: [],\n  };\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const authenticated = useSelector((state) => state.user.authonticated);\n  const authenticatedAdmin = useSelector(\n    (state) => state.user.authenticatedAdmin\n  );\n  const [adminError, setAdminError] = useState(false);\n  const [cartError, setCartError] = useState(false);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  });\n\n  const handleClick = () => {\n    if (authenticatedAdmin) {\n      setAdminError(true);\n    } else {\n      if (authenticated) {\n        if (cart.length !== 0) {\n          cart.map((item) => {\n            command.quantities.push(item.quantity);\n            command.prices.push(item.item.price);\n            command.itemsId.push(item.item.itemId);\n            command.titles.push(item.item.title);\n          });\n          dispatch(makeCommand(command));\n          dispatch(clearAllCart());\n        } else {\n          setCartError(true);\n        }\n      } else {\n        history.push(\"/login\");\n      }\n    }\n  };\n\n  let total = 0;\n  cart.map((item) => {\n    total += item.item.promotion\n      ? item.quantity *\n        (item.item.price -\n          (item.item.price * item.item.pourcentagePromotion) / 100)\n      : item.quantity * item.item.price;\n  });\n  let allItems =\n    cart.length != 0 ? (\n      cart.map((post) => {\n        return (\n          <Grid item xs={12}>\n            <Divider />\n            <PanelItem itemData={post} key={post.item.itemId} />\n            <Divider />\n          </Grid>\n        );\n      })\n    ) : (\n      <Grid item xs={12} align=\"center\">\n        <h2>NO ITEM AVAILABLE</h2>\n      </Grid>\n    );\n  return (\n    <Grid container justify=\"center\">\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"flex-start\"\n        style={{ paddingTop: 30 }}\n      >\n        <Grid container md={8} style={{ padding: 10 }}>\n          <Grid\n            container\n            xs={12}\n            justify=\"space-between\"\n            style={{ marginBottom: 30 }}\n          >\n            <Typography variant=\"h4\">Order List</Typography>\n            {adminError && (\n              <Alert\n                severity=\"warning\"\n                onClose={() => {\n                  setAdminError(false);\n                }}\n              >\n                you can't place orders as an admin\n              </Alert>\n            )}\n            {cartError && (\n              <Alert\n                severity=\"warning\"\n                onClose={() => {\n                  setCartError(false);\n                }}\n              >\n                you need to add items to your cart\n              </Alert>\n            )}\n          </Grid>\n\n          {allItems}\n        </Grid>\n        <Grid container alignItems=\"flex-start\" md={3}>\n          <Grid\n            container\n            xs={12}\n            direction=\"column\"\n            justify=\"flex-start\"\n            style={{ padding: 20, backgroundColor: \"#f5f3f4\" }}\n          >\n            <Grid\n              container\n              xs={12}\n              justify=\"center\"\n              style={{ marginBottom: 30 }}\n            >\n              <Typography variant=\"h4\">Order summary</Typography>\n            </Grid>\n\n            <Divider />\n\n            <Grid\n              container\n              xs={12}\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              style={{ marginBottom: 20, marginTop: 20 }}\n            >\n              <Typography variant=\"h6\">Order total :</Typography>\n              <Typography variant=\"h6\">{total} DZD</Typography>\n            </Grid>\n\n            <Grid\n              container\n              xs={12}\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              style={{ marginBottom: 40 }}\n            >\n              <Typography variant=\"h6\">Shipping :</Typography>\n              <Typography variant=\"h6\">{total} DZD</Typography>\n            </Grid>\n            <Grid\n              container\n              xs={12}\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              style={{ marginBottom: 40 }}\n            >\n              <form\n                className={classes.root}\n                noValidate\n                autoComplete=\"off\"\n                style={{ width: \"100%\" }}\n              >\n                <TextField\n                  style={{ width: \"100%\" }}\n                  id=\"outlined-basic\"\n                  label=\"Code promo\"\n                  variant=\"outlined\"\n                />\n              </form>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ width: \"40%\", borderRadius: 0, fontSize: \"1.2em\" }}\n              >\n                Apply\n              </Button>\n            </Grid>\n            <Divider />\n            <Grid\n              container\n              xs={12}\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              style={{ marginTop: 20, marginBottom: 30 }}\n            >\n              <Typography variant=\"h6\">Total price :</Typography>\n              <Typography variant=\"h6\">{total} DZD</Typography>\n            </Grid>\n            <Grid\n              container\n              xs={12}\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ width: \"100%\", borderRadius: 0, fontSize: \"1.2em\" }}\n                onClick={handleClick}\n              >\n                CHECKOUT\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(Cart);\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\NavButton.js",["345","346","347"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport { Link } from \"react-router-dom\";\n\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: 10,\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function MenuListComposition(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  let ourTypes = [];\n\n  Object.keys(props.types).map((postType) => {\n    if (props.types[postType].store == props.store.title) {\n      return ourTypes.push(props.types[postType]);\n    }\n  });\n\n  let alltypes = ourTypes ? (\n    ourTypes.map((post) => {\n      return (\n        <MenuItem\n          onClick={handleClose}\n          component={Link}\n          to={`/type/${post.title.split(\" \").join(\"_\")}`}\n        >\n          {post.title}\n        </MenuItem>\n      );\n    })\n  ) : (\n    <Grid item xs={12} align=\"center\">\n      <h2>NO STORE AVAILABLE</h2>{\" \"}\n    </Grid>\n  );\n\n  return (\n    <div className={classes.root}>\n      <div onMouseEnter={handleToggle} onMouseLeave={handleToggle}>\n        <Button\n          component={Link}\n          to={`/collection/${props.store.title.split(\" \").join(\"_\")}`}\n\n          disableRipple=\"true\"\n          ref={anchorRef}\n          aria-controls={open ? \"menu-list-grow\" : undefined}\n          aria-haspopup=\"true\"\n          variant={open ? \"outlined\" : \"\"}\n          // color=\"primary\"\n          style={\n            open\n              ? {\n                  backgroundColor: \"transparent\",\n                  textTransform: \"none\",\n                  fontSize: \"1.3em\",\n                }\n              : {\n                  backgroundColor: \"transparent\",\n                  textTransform: \"none\",\n                  fontSize: \"1.3em\",\n                }\n          }\n          // onClick={handleToggle}\n        >\n          {props.store.title}\n        </Button>\n\n        <Popper\n          open={open}\n          anchorEl={anchorRef.current}\n          role={undefined}\n          transition\n          disablePortal\n          style={{ marginTop: 10, zIndex: 3 }}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList\n                    autoFocusItem={open}\n                    id=\"menu-list-grow\" //onKeyDown={handleListKeyDown}\n                    MenuListProps={{ onMouseLeave: handleListKeyDown }}\n                  >\n                    {alltypes}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Menu.js",["348"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport MenuList from \"./MenuList\";\n\n//mui\nimport Paper from \"@material-ui/core/Paper\";\nimport Fade from \"@material-ui/core/Fade\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    zIndex: 4,\n  },\n  container: {\n    display: \"flex\",\n  },\n  paper: {},\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n  },\n}));\n\nexport default function Menu(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n\n  let allStores = props.storesData ? (\n    Object.keys(props.storesData).map((post) => {\n      return (\n        <MenuList\n          store={props.storesData[post]}\n          types={props.types}\n          handleChange={handleChange}\n        />\n      );\n    })\n  ) : (\n    <Grid item xs={12} align=\"center\">\n      <h2>NO STORE AVAILABLE</h2>\n    </Grid>\n  );\n\n  return (\n    <div>\n      <IconButton onClick={handleChange} \n        style={{backgroundColor: \"transparent\",\n                textTransform: \"none\"}} >\n        <MenuIcon fontSize=\"large\" style={{ color: \"#2b2d42\" }} />\n      </IconButton>\n\n      <Fade in={checked}>\n        <Paper elevation={4} className={classes.paper} className={classes.root}>\n          <Grid container justify=\"center\" xs={12} style={{ marginTop: 20 }}>\n            <IconButton onClick={handleChange}>\n              <CloseIcon fontSize=\"large\" style={{ color: \"#2b2d42\" }} />\n            </IconButton>\n          </Grid>\n          <Grid container xs={12} direction=\"column\" alignItems=\"center\">\n            {allStores}\n          </Grid>\n        </Paper>\n      </Fade>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Search.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\ItemImage.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\PanelItem.js",["349"],"import React, { useState } from \"react\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { connect } from \"react-redux\";\n\n//image\n\n// ui\n\nimport TextField from \"@material-ui/core/TextField\";\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\nimport RemoveOutlinedIcon from \"@material-ui/icons/RemoveOutlined\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n//redux\nimport { useDispatch } from \"react-redux\";\nimport {\n  removeItem,\n  addToCart,\n  decreaseQuantity,\n} from \"../redux/actions/cartActions\";\n\n//framer motion animation\nimport { motion } from \"framer-motion\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nconst Panel = ({ classes, itemData }) => {\n  const newPrice = itemData.item.promotion\n    ? itemData.item.price -\n      (itemData.item.price * itemData.item.pourcentagePromotion) / 100\n    : null;\n  const [quantity, setQuantity] = useState(itemData.quantity);\n  const dispatch = useDispatch();\n\n  const handleQuantityPlus = (item) => {\n    dispatch(addToCart(item));\n    setQuantity(quantity + 1);\n  };\n  const handleQuantityMinus = (item) => {\n    dispatch(decreaseQuantity(item));\n    if (quantity !== 1) {\n      setQuantity(quantity - 1);\n    }\n  };\n  const handleRemove = (title) => {\n    dispatch(removeItem(title));\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      transition={{ duration: 0.5, delay: 0.2 }}\n    >\n      <Grid\n        container\n        style={{ paddingTop: 20, paddingBottom: 20 }}\n        justify=\"space-between\"\n      >\n        <Grid container xs={12} md={6} align=\"center\">\n          <img\n            src={\n              itemData.item.itemImagesUrl[1]\n                ? itemData.item.itemImagesUrl[1]\n                : itemData.item.itemImagesUrl[0]\n            }\n            style={{ maxHeight: 100, marginRight: 20 }}\n          />\n          <Typography\n            variant=\"h5\"\n            style={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            {itemData.item.title}\n          </Typography>\n        </Grid>\n        <Grid\n          container\n          xs={12}\n          md={6}\n          direction=\"row\"\n          alignItems=\"center\"\n          justify=\"space-between\"\n        >\n          <Typography>\n            {newPrice ? newPrice : itemData.item.price} DZD\n          </Typography>\n\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <Button\n              color=\"primary\"\n              onClick={() => handleQuantityMinus(itemData)}\n            >\n              <RemoveOutlinedIcon fontSize=\"medium\" color=\"primary\" />\n            </Button>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e) => {\n                e.preventDefault();\n              }}\n            >\n              <TextField\n                id=\"outlined-basic\"\n                disabled\n                size=\"small\"\n                variant=\"outlined\"\n                style={{ width: 60 }}\n                value={quantity}\n                labelwidth={5}\n                inputProps={{\n                  min: 0,\n                  classes: {\n                    input: classes.resize,\n                  },\n                }}\n              />\n            </form>\n\n            <Button\n              color=\"primary\"\n              onClick={() => handleQuantityPlus(itemData.item)}\n            >\n              <AddOutlinedIcon color=\"primary\" fontSize=\"medium\" />\n            </Button>\n          </div>\n\n          <Typography>\n            {newPrice\n              ? newPrice * itemData.quantity\n              : itemData.item.price * itemData.quantity}{\" \"}\n            DZD\n          </Typography>\n\n          <IconButton onClick={() => handleRemove(itemData.item.title)}>\n            <CloseIcon fontSize=\"medium\" />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </motion.div>\n  );\n};\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Panel));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\uiReducer.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\FilterSmall.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\ItemCard.js",["350","351","352"],"import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n//mui stuff\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nimport store from \"../redux/store\";\nimport { addToCart } from \"../redux/actions/cartActions\";\nimport { connect } from \"react-redux\";\n\nconst styles = {\n  card: {\n    maxWidth: 800,\n    margin: \"auto\",\n    margin: 7,\n    //  minHeight: 200,\n    display: \"flex\",\n    //flexDirection:\"row-reverse\",\n    justifyContent: \"space-between\",\n\n    flexWrap: \"wrap\",\n    borderRadius: 0,\n  },\n\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    //  alignItems:\"flex-end\",\n  },\n  content2: {\n    height: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 280,\n    // backgroundColor: \"#7451eb\",\n    //flexDirection:\"row-reverse\",\n  },\n\n  item: {\n    height: 50,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  imageItem: {\n    width: \"100%\",\n    height: 250,\n  },\n};\nclass ItemCard extends Component {\n  state = {\n    shadow: false,\n    apear: true,\n    adminError: false,\n  };\n\n  onMouseOver = () => this.setState({ shadow: true });\n  onMouseOut = () => this.setState({ shadow: false });\n  handleAdd = (item) => {\n    if (this.props.authenticatedAdmin) {\n      this.setState({ adminError: true });\n    } else {\n      store.dispatch(addToCart(item));\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      post: {\n        title,\n        type,\n        itemImagesUrl,\n        price,\n        promotion,\n        pourcentagePromotion,\n        itemId,\n        store,\n        quantity,\n      },\n    } = this.props;\n    const item = {\n      title,\n      type,\n      itemImagesUrl,\n      price,\n      promotion,\n      pourcentagePromotion,\n      itemId,\n      store,\n      quantity,\n    };\n\n    let newPrice = promotion\n      ? price - (price * pourcentagePromotion) / 100 + \" DZD\"\n      : null;\n\n    let promo = promotion ? (\n      <Typography\n        variant=\"h5\"\n        style={{\n          position: \"absolute\",\n          left: 5,\n          top: 5,\n          padding: 5,\n          backgroundColor: \"#b100e8\",\n          color: \"white\",\n        }}\n      >\n        {pourcentagePromotion} %\n      </Typography>\n    ) : null;\n\n    return (\n      <Card\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          zIndex: 1,\n          position: \"relative\",\n          marginBottom: 40,\n        }}\n        className={classes.card}\n        onMouseOver={this.onMouseOver}\n        onMouseOut={this.onMouseOut}\n        raised={this.state.shadow}\n      >\n        <CardActionArea\n          component={Link}\n          to={`/type/${type.split(\" \").join(\"_\")}/${title\n            .split(\" \")\n            .join(\"_\")}`}\n        >\n          {promo}\n\n          <CardMedia\n            className={classes.imageItem}\n            image={this.state.shadow ? itemImagesUrl[1] : itemImagesUrl[0]}\n            title={title}\n          />\n          {quantity == 0 ? (\n            <Typography\n              style={{\n                position: \"absolute\",\n                top: 0,\n                right: 0,\n                left: 0,\n                bottom: 0,\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                color: \"white\",\n                fontSize: \"1.5em\",\n              }}\n            >\n              <span style={{ border: \"2px white solid\", padding: 10 }}>\n                Out of stock\n              </span>\n            </Typography>\n          ) : (\n            <p style={{ margin: 0, padding: 0 }}></p>\n          )}\n\n          <CardContent className={classes.content}>\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              {type}\n            </Typography>\n            <Typography style={{ fontSize: \"1.5em\" }} color=\"textPrimary\">\n              {title}\n            </Typography>\n\n            <Typography\n              variant=\"body1\"\n              color=\"textPrimary\"\n              style={{ marginTop: 5 }}\n            >\n              <span style={promotion ? { textDecoration: \"line-through\" } : {}}>\n                {price + \" DZD\"}\n              </span>\n              <span style={{ marginLeft: 20 }}>{newPrice}</span>\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions style={{ padding: 0 }}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            style={{ Zindex: 2, borderRadius: 0 }}\n            fullWidth\n            onClick={() => this.handleAdd(item)}\n          >\n            Add to panel\n          </Button>\n        </CardActions>\n        {this.state.adminError && (\n          <Alert\n            severity=\"warning\"\n            onClose={() => this.setState({ adminError: false })}\n          >\n            you can't add items as admin\n          </Alert>\n        )}\n      </Card>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  authenticatedAdmin: state.user.authenticatedAdmin,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(ItemCard));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\FilterLarge.js",["353","354","355","356","357","358","359","360"],"import React, { Component } from \"react\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { connect } from \"react-redux\";\nimport ItemCard from \"./ItemCard\";\nimport ItemCardOne from \"./ItemCardOne\";\n\n//image\nimport noprogram from \"../image/noprogram.gif\";\n//icon\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ViewComfyIcon from \"@material-ui/icons/ViewComfy\";\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\nimport ViewStreamIcon from \"@material-ui/icons/ViewStream\";\nimport ViewAgendaIcon from \"@material-ui/icons/ViewAgenda\";\n// ui\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  noprogram: {\n    height: 250,\n    width: 250,\n  },\n  noProgContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    marginBottom: 20,\n  },\n  formControl: {\n    margin: theme.spacing(0),\n    minWidth: 120,\n    marginRight: 15,\n  },\n});\nexport class FilterLarge extends Component {\n  state = {\n    filterType: \"\",\n    size: 3,\n    itemsCount: this.props.items.length,\n  };\n\n  handleChange = (e) => {\n    this.setState({ filterType: e.target.value });\n  };\n  render() {\n    console.log(this.state.itemsCount);\n    const { classes, items } = this.props;\n    if (this.state.filterType === 10) {\n      items.sort((a, b) => {\n        return a.price - b.price;\n      });\n    }\n    if (this.state.filterType === 20) {\n      items.sort((a, b) => {\n        return b.price - a.price;\n      });\n    }\n    if (this.state.filterType === 30) {\n      items.sort(function (a, b) {\n        var x = a.createdAt.toLowerCase();\n        var y = b.createdAt.toLowerCase();\n        if (x < y) {\n          return -1;\n        }\n        if (x > y) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    if (this.state.filterType === 40) {\n      items.sort(function (a, b) {\n        var x = a.createdAt.toLowerCase();\n        var y = b.createdAt.toLowerCase();\n        if (x > y) {\n          return -1;\n        }\n        if (x < y) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    if (this.state.filterType === 50) {\n      items.sort(function (a, b) {\n        const x = a.title.toLowerCase();\n        const y = b.title.toLowerCase();\n        if (x < y) {\n          return -1;\n        }\n        if (x > y) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    if (this.state.filterType === 60) {\n      items.sort(function (a, b) {\n        const x = a.title.toLowerCase();\n        const y = b.title.toLowerCase();\n        if (x < y) {\n          return 1;\n        }\n        if (x > y) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n    if (this.state.filterType === 70) {\n      items.sort(function (a, b) {\n        return b.bestSell - a.bestSell;\n      });\n    }\n    if (this.state.filterType === 80) {\n      this.state.itemsCount = 5;\n    }\n    if (this.state.filterType === 90) {\n      this.state.itemsCount = 6;\n    }\n    if (this.state.filterType === 100) {\n      this.state.itemsCount = 7;\n    }\n\n    let allItems = items[0] ? (\n      this.props.items.map((post, i) => {\n        if (i < this.state.itemsCount) {\n          return (\n            <Grid key={post.pubId} item xs={6} md={this.state.size}>\n              <ItemCard key={post.pubId} post={post} />\n            </Grid>\n          );\n        }\n      })\n    ) : (\n      <Grid container direction=\"column\" align=\"center\">\n        <div>\n          <img className={classes.noprogram} src={noprogram} alt=\"chilling\" />\n        </div>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          There are no Items to Show\n        </Typography>\n      </Grid>\n    );\n\n    let allItemsOne = items[0] ? (\n      this.props.items.map((post, i) => {\n        if (i < this.state.itemsCount) {\n          return (\n            <Grid key={post.pubId} item xs={12}>\n              <ItemCardOne key={post.pubId} post={post} />\n            </Grid>\n          );\n        }\n      })\n    ) : (\n      <Grid container direction=\"column\" align=\"center\">\n        <div>\n          <img className={classes.noprogram} src={noprogram} alt=\"chilling\" />\n        </div>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          There are no Items to Show\n        </Typography>\n      </Grid>\n    );\n\n    return (\n      <Grid container xs={12} direction=\"column\" alignItems=\"center\">\n        <Grid\n          container\n          xs={10}\n          style={{ padding: 0, marginTop: 50, backgroundColor: \"#f5f3f4\" }}\n        >\n          <Grid container xs={12} md={6}>\n            <IconButton\n              aria-label=\"ViewListIcon\"\n              style={{ backgroundColor: \"transparent\", textTransform: \"none\" }}\n              onClick={() => this.setState({ size: 1 })}\n            >\n              <ViewListIcon style={{ fontSize: \"2em\" }} />\n            </IconButton>\n            <IconButton\n              aria-label=\"ViewListIcon\"\n              style={{ backgroundColor: \"transparent\", textTransform: \"none\" }}\n              onClick={() => this.setState({ size: 6 })}\n            >\n              <ViewStreamIcon\n                style={{\n                  transform: \"rotate(90deg)\",\n                  fontSize: \"1.7em\",\n                  marginBottom: 4,\n                }}\n              />\n            </IconButton>\n            <IconButton\n              aria-label=\"ViewListIcon\"\n              style={{ backgroundColor: \"transparent\", textTransform: \"none\" }}\n              onClick={() => this.setState({ size: 4 })}\n            >\n              <ViewColumnIcon style={{ fontSize: \"2.2em\" }} />\n            </IconButton>\n            <IconButton\n              aria-label=\"ViewListIcon\"\n              style={{ backgroundColor: \"transparent\", textTransform: \"none\" }}\n              onClick={() => this.setState({ size: 3 })}\n            >\n              <ViewComfyIcon style={{ fontSize: \"2em\" }} />\n            </IconButton>\n          </Grid>\n          <Grid container xs={12} md={6} justify=\"flex-end\" alignItems=\"center\">\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Sort by\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={this.state.age}\n                onChange={this.handleChange}\n                label=\"Age\"\n              >\n                <MenuItem value={10}>Price : low to high</MenuItem>\n                <MenuItem value={20}>Price : hight to low</MenuItem>\n                <MenuItem value={30}>Date : old to new</MenuItem>\n                <MenuItem value={40}>Date : New to old</MenuItem>\n                <MenuItem value={50}>Alphabitically : A-Z</MenuItem>\n                <MenuItem value={60}>Alphabitically : Z-A</MenuItem>\n                <MenuItem value={70}>Best Selling</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Items\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={this.state.age}\n                onChange={this.handleChange}\n                label=\"Age\"\n              >\n                <MenuItem value={80}>5</MenuItem>\n                <MenuItem value={90}>6</MenuItem>\n                <MenuItem value={100}>7</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <Grid container xs={10} style={{ padding: 10 }}>\n          {this.state.size === 1 ? allItemsOne : allItems}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(FilterLarge);\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\MenuList.js",["361","362"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // width: '30%',\n    //maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\nexport default function MenuList(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const handleClickBoth = () => {\n    props.handleChange();\n    handleClick();\n  };\n\n  let ourTypes = [];\n  // console.log\n\n  Object.keys(props.types).map((postType) => {\n    if (props.types[postType].store == props.store.title) {\n      return ourTypes.push(props.types[postType]);\n    }\n  });\n\n  let alltypes = ourTypes ? (\n    ourTypes.map((post) => {\n      return (\n        <ListItem\n          button\n          className={classes.nested}\n          style={{ padding: 10, textAlign: \"center\", verticalAlign: \"middle\" }}\n          onClick={handleClickBoth}\n          component={Link}\n          to={`/type/${post.title.split(\" \").join(\"_\")}`}\n        >\n          <ListItemText primary={post.title} />\n        </ListItem>\n      );\n    })\n  ) : (\n    <Grid item xs={12} align=\"center\">\n      <h2>NO STORE AVAILABLE</h2>{\" \"}\n    </Grid>\n  );\n\n  /*style={ open ? \n      {paddingLeft:0,display:\"inline-block\",cursor:\"pointer\",userSelect:\"none\",borderBottom:\"2px #b100e8 solid\"}:\n      {paddingLeft:0,display:\"inline-block\",cursor:\"pointer\",userSelect:\"none\"}} >*/\n\n  return (\n    <div\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n    >\n      <p button onClick={handleClick} disableRipple=\"true\">\n        <p\n          style={\n            open\n              ? {\n                  padding: 0,\n                  cursor: \"pointer\",\n                  userSelect: \"none\",\n                  marginBottom: 0,\n                  fontSize: \"1.5em\",\n                  borderBottom: \"2px #b100e8 solid\",\n                }\n              : {\n                  padding: 0,\n                  cursor: \"pointer\",\n                  userSelect: \"none\",\n                  fontSize: \"1.5em\",\n                  marginBottom: 0,\n                }\n          }\n        >\n          {props.store.title}\n        </p>\n      </p>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          {alltypes}\n        </List>\n      </Collapse>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\index.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\typesReducer.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\usersReducer.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\itemsReducer.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\storesReducer.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\commandsReducer.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\typesActions.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\storesActions.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\itemsActions.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\userActions.js",["363"],"import {\n  SET_USER,\n  SET_UNAUTHONTIFICATED,\n  SET_ERRORS,\n  LOADING_UI,\n  CLEAR_ERRORS,\n  SET_AUTHONTICATED,\n  END_LOADING,\n  SET_WEBSITE,\n  SET_AUTHENTICATED_ADMIN,\n  SET_UNAUTHENTICATED_ADMIN,\n} from \"../types\";\nimport axios from \"axios\";\nimport store from \"../store\";\nimport { getStores } from \"./storesActions\";\nimport { getTypes } from \"./typesActions\";\nimport { getItems } from \"./itemsActions\";\n\n//set auth header to check if authorized in other parts of app\nconst setAuthorisationHeader = (token) => {\n  const FBIdToken = `Sell ${token}`;\n  localStorage.setItem(\"FBIdToken\", FBIdToken);\n  axios.defaults.headers.common[\"Authorization\"] = FBIdToken;\n};\n\n//get user data\nexport const getUserData = () => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .get(\"/users\")\n    .then(({ data }) => {\n      dispatch({ type: END_LOADING });\n      if (data.role === \"client\") {\n        dispatch({\n          type: SET_USER,\n          payload: data,\n        });\n      } else {\n        dispatch({ type: SET_AUTHENTICATED_ADMIN });\n      }\n    })\n    .catch(({ message }) => {\n      dispatch({\n        type: SET_ERRORS,\n        payload: message,\n      });\n    });\n};\n//signup\n\nexport const signup = (newUserData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n\n  axios\n    .post(\"/signup\", newUserData)\n    .then((res) => {\n      // console.log(res);\n      if (!res.data.token) {\n        dispatch({\n          type: SET_ERRORS,\n          payload: res.data,\n        });\n      } else {\n        dispatch({ type: END_LOADING });\n        setAuthorisationHeader(res.data.token);\n        dispatch(getUserData());\n        dispatch({ type: CLEAR_ERRORS });\n        history.push(\"/\");\n      }\n    })\n    .catch((err) => {\n      dispatch({ type: SET_ERRORS, payload: err.message });\n    });\n};\n\nexport const signIn = (userData, history) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/login\", userData)\n    .then((res) => {\n      if (res.data.error) {\n        dispatch({ type: SET_ERRORS, payload: res.data.error });\n      } else {\n        dispatch({ type: END_LOADING });\n        setAuthorisationHeader(res.data.token);\n        dispatch({ type: CLEAR_ERRORS });\n        dispatch(getUserData());\n        if (store.getState().cart.length !== 0) {\n          history.push(\"/panel\");\n        } else {\n          history.push(\"/\");\n        }\n      }\n    })\n    .catch((err) => {\n      dispatch({ type: SET_ERRORS, payload: err.message });\n    });\n};\n\n//logout\nexport const logout = (history) => (dispatch) => {\n  localStorage.removeItem(\"FBIdToken\");\n\n  history.push(\"/login\");\n  delete axios.defaults.headers.common[\"Authorization\"];\n  dispatch({ type: SET_UNAUTHONTIFICATED });\n  dispatch({ type: SET_UNAUTHENTICATED_ADMIN });\n};\n\n//get the website data\nexport const getWebsiteData = () => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .get(\"/users/website\")\n    .then(({ data }) => {\n      dispatch({ type: END_LOADING });\n      dispatch({ type: SET_WEBSITE, payload: data });\n      dispatch(getStores());\n      dispatch(getTypes());\n      dispatch(getItems());\n    })\n    .catch(({ message }) => {\n      dispatch({ type: SET_ERRORS, payload: message });\n    });\n};\n\nexport const updateWebsiteDetails = (updatedDetails) => (dispatch) => {\n  dispatch({ type: LOADING_UI });\n  axios\n    .post(\"/website/edit\", updatedDetails)\n    .then(() => {\n      dispatch(getWebsiteData());\n      dispatch({ type: END_LOADING });\n    })\n    .catch(({ message }) => {\n      dispatch({ type: SET_ERRORS, payload: message });\n    });\n};\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\reducers\\cartReducer.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\cartActions.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\user.js",["364"],"import React, { Component } from \"react\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../redux/actions/userActions\";\nimport noprogram from \"../image/noprogram.gif\";\n\n//mui stuff\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n//icons\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  userimage: {\n    height: 150,\n    width: 150,\n    margin: 20,\n  },\n\n  profile: {\n    margin: 20,\n  },\n\n  info: {\n    marginTop: 10,\n    display: \"flex\",\n    alignItem: \"center\",\n  },\n  editButton: {\n    //width: \"90%\",\n    height: 50,\n    margin:20\n  },\n  title: {\n    width: \"100%\",\n    textAlign: \"center\",\n    height: 50,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  view: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  photo: {\n    marginTop: 20,\n    marginLeft: -10,\n  },\n  more: {\n    marginTop: 10,\n    width: \"100%\",\n  },\n  progButton: {\n    width: \"50%\",\n    height: 50,\n  },\n  noprogram: {\n    height: 150,\n    width: 150,\n  },\n  noProgContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    marginBottom: 20,\n  },\n});\n\nclass user extends Component {\n  state = {\n    in: false,\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  handleMoreItem = () => {\n    this.setState({ in: !this.state.in });\n  };\n  handleLogout = () => {\n    this.props.logout(this.props.history);\n  };\n\n  handleImageChange = (event) => {\n    const image = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", image, image.name);\n\n    this.props.uploadImage(formData);\n  };\n  handleClickUpload = () => {\n    const upload = document.getElementById(\"inputPic\");\n    upload.click();\n  };\n\n  render() {\n    const {\n      classes,\n      user: { user },\n    } = this.props;\n    let allMyParcours = (\n      <CardContent className={classes.noProgContent}>\n        <CardMedia className={classes.noprogram} image={noprogram} />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          There are no commands to Show\n        </Typography>\n      </CardContent>\n    );\n    return (\n      <Grid container style={{padding:20}} >\n        <Grid item sm={6} xs={12} style={{ padding: 20 , backgroundColor: \"#f5f3f4\"}}>\n          \n            <Typography\n              className={classes.title}\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              User information\n            </Typography>\n\n            <Divider />\n            <CardContent>\n              <Typography\n                className={classes.info}\n                variant=\"body1\"\n                color=\"textSecondary\"\n              >\n                <EmailIcon /> : {user?.nom} {user?.prenom}\n              </Typography>\n              <Typography\n                className={classes.info}\n                variant=\"body1\"\n                color=\"textSecondary\"\n              >\n                <EmailIcon /> : {user?.email}\n              </Typography>\n              <Typography\n                className={classes.info}\n                variant=\"body1\"\n                color=\"textSecondary\"\n              >\n                <PhoneIcon /> : {user?.phone}{\" \"}\n              </Typography>\n\n              <Typography\n                className={classes.info}\n                variant=\"body1\"\n                color=\"textSecondary\"\n              >\n                <RoomIcon /> : {user?.wilaya} {user?.city}\n              </Typography>\n              <Typography\n                className={classes.info}\n                variant=\"body1\"\n                color=\"textSecondary\"\n              >\n                <RoomIcon /> : {user?.adress}\n              </Typography>\n            </CardContent>\n\n            \n            <Button\n              className={classes.editButton}\n              variant=\"contained\"\n              style={{ backgroundColor: \"#f94144\", color: \"#fff\" }}\n              endIcon={<ExitToAppIcon />}\n              onClick={this.handleLogout}\n            >\n              LOGOUT\n            </Button>\n            \n        </Grid>\n\n        <Grid item sm={6} xs={12} style={{ padding: 20 }}>\n          \n            <Typography\n              className={classes.title}\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              Commands information\n            </Typography>\n            <Divider />\n            {allMyParcours}\n           \n          \n        </Grid>\n       \n      </Grid>\n    );\n  }\n}\n\nuser.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n};\nconst mapActionToProps = {\n  logout,\n};\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  ui: state.ui,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapActionToProps\n)(withStyles(styles)(user));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\admin.js",["365","366","367","368","369","370","371","372","373","374","375","376","377"],"import React, { Component } from \"react\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../redux/actions/userActions\";\nimport noprogram from \"../image/noprogram.gif\";\n\n//mui stuff\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n//icons\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport store from \"../redux/store\";\nimport { SET_ADMIN_NAV, UNSET_ADMIN_NAV } from \"../redux/types\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nclass admin extends Component {\n  state = {\n    in: false,\n  };\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  componentWillMount() {\n    store.dispatch({ type: SET_ADMIN_NAV });\n  }\n  componentWillUnmount() {\n    store.dispatch({ type: UNSET_ADMIN_NAV });\n  }\n\n  handleMoreItem = () => {\n    this.setState({ in: !this.state.in });\n  };\n  handleLogout = () => {\n    this.props.logout(this.props.history);\n  };\n\n  handleImageChange = (event) => {\n    const image = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", image, image.name);\n\n    this.props.uploadImage(formData);\n  };\n  handleClickUpload = () => {\n    const upload = document.getElementById(\"inputPic\");\n    upload.click();\n  };\n\n  render() {\n    const { classes, admin } = this.props;\n\n    return (\n      <Grid container>\n        <button onClick={this.handleLogout}>logout</button>\n      </Grid>\n    );\n  }\n}\n\nadmin.propTypes = {\n  classes: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n};\nconst mapActionToProps = {\n  logout,\n};\nconst mapStateToProps = (state) => ({\n  admin: state.user.website[1],\n});\n\nexport default connect(\n  mapStateToProps,\n  mapActionToProps\n)(withStyles(styles)(admin));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\adminRoute.js",["378"],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\AdminRoute.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\util\\UserRoute.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\redux\\actions\\commandsActions.js",["379"],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\Store.js",["380","381","382","383","384","385","386","387","388","389","390"],"import React, { Component, Fragment } from \"react\";\nimport Media from \"react-media\";\n\nimport { getWebsiteData } from \"../redux/actions/userActions\";\nimport StoreImage from \"./StoreImage\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { connect } from \"react-redux\";\n\nimport ItemCard from \"./ItemCard\";\nimport TypeCard from \"./TypeCard\";\n\n\nimport FilterSmall from \"./FilterSmall\";\nimport FilterLarge from \"./FilterLarge\";\n\n//image\nimport noprogram from \"../image/noprogram.gif\";\n\n//icon\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport ViewComfyIcon from '@material-ui/icons/ViewComfy';\nimport ViewColumnIcon from '@material-ui/icons/ViewColumn';\nimport ViewStreamIcon from '@material-ui/icons/ViewStream';\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgenda';\n// ui\nimport IconButton from '@material-ui/core/IconButton';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  noprogram: {\n    height: 250,\n    width: 250,\n  },\n  noProgContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    marginBottom: 20,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n});\nclass Store extends Component {\n  state = {\n    posts: \"\",\n    filterOpen: false,\n    filterType:\"\"\n  };\n  handleClickOpen = () => {\n    this.setState({ filterOpen: true });\n  };\n\n  handleClose = () => {\n    this.setState({ filterOpen: false });\n  };\n  handleClickFilter = (e)=> {\n    this.setState({ filterType: e.target.value });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  render() {\n    let ourTitle = window.location.href\n      .split(\"http://localhost:3000/collection/\")\n      .join(\"\")\n      .replace(/_/g, \" \");\n\n    //  console.log(\"our title\")\n\n    // console.log(ourTitle)\n\n    const { classes, types,stores, items } = this.props;\n\n    let ourStore;\n    let ourTypes = [];\n    let ourItems = [];\n\n    stores?.map((post) => {\n      if (post.title === ourTitle) {\n        return (ourStore = post);\n      }\n      return ourStore;\n    });\n\n    items?.map((post) => {\n      if (post.store === ourStore.title) {\n        return ourItems.push(post);\n      }\n      return ourItems;\n    });\n\n    types?.map((post) => {\n      if (post.store === ourStore.title) {\n        return ourTypes.push(post);\n      }\n      return ourTypes;\n    });\n\n    let allTypes = ourTypes[0] ? (\n      ourTypes?.map((post) => {\n        return (\n          <Grid key={post.pubId} item xs={12} md={4}>\n            <TypeCard key={post.pubId} post={post} />\n          </Grid>\n        );\n      })\n    ) : (\n      <Grid container direction=\"column\" align=\"center\">\n        <div>\n          <img className={classes.noprogram} src={noprogram} alt=\"chilling\" />\n        </div>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          There are no store to Show\n        </Typography>\n      </Grid>\n    );\n\n    let allItems = ourItems[0] ? (\n      ourItems?.map((post) => {\n        return (\n          <Grid key={post.pubId} item xs={6} md={3}>\n            <ItemCard key={post.pubId} post={post} />\n          </Grid>\n        );\n      })\n    ) : (\n      <Grid container direction=\"column\" align=\"center\">\n        <div>\n          <img className={classes.noprogram} src={noprogram} alt=\"chilling\" />\n        </div>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          There are no Items to Show\n        </Typography>\n      </Grid>\n    );\n\n    return (\n      <Grid container>\n        <Grid container justify=\"center\" xs={12} style={{ height: 600 }}>\n        <StoreImage  itemStore={ourStore.title} itemImages={ourStore.storeImagesUrl}  /> \n        </Grid>\n\n        <Media\n          queries={{\n            small: \"(max-width: 799px)\",\n            large: \"(min-width: 799px)\",\n          }}\n        >\n          {(matches) => (\n            <Fragment>\n              {matches.small && (\n                <Grid container xs={12}>\n                  <FilterSmall />\n                  <Grid container xs={10} style={{ padding: 12 }}>\n                    {allTypes}\n                  </Grid>\n                  <Grid container xs={12} style={{ padding: 0 }}>\n                    {allItems}\n                  </Grid>\n                </Grid>\n              )}\n              {matches.large && (\n                <Grid container xs={12} direction='column' alignItems=\"center\" >\n                 \n\n                  <Grid container xs={10} style={{ padding: 12 }}>\n                    {allTypes}\n                  </Grid>\n                  <FilterLarge items={ourItems} />\n                  \n                </Grid>\n              )}\n            </Fragment>\n          )}\n        </Media>\n      </Grid>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  types: state.types,\n  stores: state.stores,\n  items: state.items,\n  UI: state.ui,\n});\n\nexport default connect(mapStateToProps, { getWebsiteData })(\n  withStyles(styles)(Store)\n);\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\StoreImage.js",["391","392","393"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\n\nimport { Info } from \"@mui-treasury/components/info\";\nimport { useGalaxyInfoStyles } from \"@mui-treasury/styles/info/galaxy\";\nimport { useCoverCardMediaStyles } from \"@mui-treasury/styles/cardMedia/cover\";\n\n\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { autoPlay } from 'react-swipeable-views-utils';\n\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    width: \"100%\",\n\n    flexGrow: 1,\n    zIndex: 2,\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  img: {\n    height: 600,\n    display: \"block\",\n    width: \"100%\",\n    overflow: \"hidden\",\n    maxHeight: 600,\n    zIndex:1,\n    //objectFit: \"contain\",\n  },\n  typeName: {\n    float: \"left\",\n    position: \"absolute\",\n    top: 100,\n    left: 0,\n    padding: 20,\n    zIndex: 3,\n  },\n  changeButton: {\n    float: \"left\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    padding: 20,\n    zIndex: 3,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  stepper: {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\",\n    background: \"transparent\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n}));\n\nfunction StoreImage(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const maxSteps = props.itemImages.length;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Box className={classes.typeName}>\n        <Typography\n          variant=\"h5\"\n          color=\"textPrimary\"\n          style={{ display: \"inline-block\", borderLeft: \"4px #b100e8 solid\",paddingLeft:10 }}\n        >\n         \n        </Typography>\n      </Box>\n\n      <AutoPlaySwipeableViews\n        interval=\"6000\"\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {props.itemImages.map((step, index) => (\n          <div key={step}>\n            {Math.abs(activeStep - index) <= 2 ? (\n              <img className={classes.img} src={step} alt={step} />\n            ) : null}\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n      <div className={classes.changeButton}>\n        <IconButton\n          color=\"primary\"\n          variant=\"outlined\"\n          size=\"large\"\n          onClick={handleBack}\n          disabled={activeStep === 0}\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowRight fontSize=\"large\" />\n          ) : (\n            <KeyboardArrowLeft fontSize=\"large\" />\n          )}\n        </IconButton>\n        <IconButton\n          color=\"primary\"\n          size=\"large\"\n          onClick={handleNext}\n          disabled={activeStep === maxSteps - 1}\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowLeft fontSize=\"large\" />\n          ) : (\n            <KeyboardArrowRight fontSize=\"large\" />\n          )}\n        </IconButton>\n      </div>\n      <MobileStepper\n        className={classes.stepper}\n        steps={maxSteps}\n        position=\"static\"\n        variant=\"dots\"\n        activeStep={activeStep}\n      />\n    </div>\n  );\n}\n\nexport default StoreImage;\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\TypeCard.js",["394","395","396","397","398","399","400"],"import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n//mui stuff\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nimport store from \"../redux/store\";\nimport { addToCart } from \"../redux/actions/cartActions\";\nimport { connect } from \"react-redux\";\n\nconst styles = {\n  card: {\n    maxWidth: 800,\n    margin: \"auto\",\n    margin: 10,\n    minHeight: 300,\n    display: \"flex\",\n    position:\"relative\",\n    //flexDirection:\"row-reverse\",\n    justifyContent: \"space-between\",\n\n    flexWrap: \"wrap\",\n    \n  },\n\n  content: {\n    position: \"absolute\",\n     top:0,\n     left:0,\n     bottom:0,\n     right:0,\n     \n    display: \"flex\",\n    justifyContent:'center',\n    alignItems:\"center\",\n    \n   \n    //  alignItems:\"flex-end\",\n  },\n  content2: { \n    \n//width:\"100%\",\n     padding:20,\n     backgroundColor:'rgba(0,0,0,0.7)',\n    textAlign:\"center\",\n    color:\"white\",\n    // backgroundColor: \"#7451eb\",\n    //flexDirection:\"row-reverse\",\n  },\n\n  item: {\n    height: 50,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  imageItem: {\n    width: \"100%\",\n    height: 400,\n    \n  },\n};\nclass TypeCard extends Component {\n  state = {\n    shadow: false,\n    apear: true,\n    adminError: false,\n  };\n\n  onMouseOver = () => this.setState({ shadow: true });\n  onMouseOut = () => this.setState({ shadow: false });\n  handleAdd = (item) => {\n    if (this.props.authenticatedAdmin) {\n      this.setState({ adminError: true });\n    } else {\n      store.dispatch(addToCart(item));\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      post: {\n        title,\n        \n        typeImagesUrl,\n       \n      },\n    } = this.props;\n    const type = {\n      title,\n      \n      typeImagesUrl,\n     \n    };\n\n   \n\n    return (\n      <Card\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          zIndex: 1,\n          position: \"relative\",\n        }}\n        className={classes.card}\n        onMouseOver={this.onMouseOver}\n        onMouseOut={this.onMouseOut}\n       // raised={this.state.shadow}\n\n        component={Link}\n          to={`/type/${title\n            .split(\" \")\n            .join(\"_\")}`}\n      >\n        \n\n          <CardMedia\n            className={classes.imageItem}\n            image={typeImagesUrl[0]}\n            title={title}\n          />\n\n         <CardActions className={classes.content} style={this.state.shadow? {backgroundColor:\"rgba(250,250,250,0.2)\"}:{}} >\n\n            <Typography variant=\"h4\" className={classes.content2} >\n              {title}\n            </Typography>\n \n          </CardActions>\n          \n        \n      </Card>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  authenticatedAdmin: state.user.authenticatedAdmin,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(TypeCard));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\ItemCardOne.js",["401","402","403"],"import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n//mui stuff\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nimport store from \"../redux/store\";\nimport { addToCart } from \"../redux/actions/cartActions\";\nimport { connect } from \"react-redux\";\n\nconst styles = {\n  card: {\n    width: \"100%\",\n    margin: \"auto\",\n    margin: 7,\n    //  minHeight: 200,\n    display: \"flex\",\n    //flexDirection:\"row-reverse\",\n    //  justifyContent: \"space-between\",\n\n    //flexWrap: \"wrap\",\n    borderRadius: 0,\n  },\n\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n\n    //  alignItems:\"flex-end\",\n  },\n  content2: {\n    height: 10,\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 280,\n    // backgroundColor: \"#7451eb\",\n    //flexDirection:\"row-reverse\",\n  },\n\n  item: {\n    height: 50,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  imageItem: {\n    width: \"100%\",\n    height: 250,\n  },\n};\nclass ItemCardOne extends Component {\n  state = {\n    shadow: false,\n    apear: true,\n    adminError: false,\n  };\n\n  onMouseOver = () => this.setState({ shadow: true });\n  onMouseOut = () => this.setState({ shadow: false });\n  handleAdd = (item) => {\n    if (this.props.authenticatedAdmin) {\n      this.setState({ adminError: true });\n    } else {\n      store.dispatch(addToCart(item));\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      post: {\n        title,\n        type,\n        itemImagesUrl,\n        price,\n        promotion,\n        pourcentagePromotion,\n        itemId,\n        store,\n        quantity,\n        description,\n      },\n    } = this.props;\n    const item = {\n      title,\n      type,\n      itemImagesUrl,\n      price,\n      promotion,\n      pourcentagePromotion,\n      itemId,\n      store,\n      quantity,\n      description,\n    };\n\n    let newPrice = promotion\n      ? price - (price * pourcentagePromotion) / 100 + \" DZD\"\n      : null;\n\n    let promo = promotion ? (\n      <Typography\n        variant=\"h5\"\n        style={{\n          position: \"absolute\",\n          left: 5,\n          top: 5,\n          padding: 5,\n          backgroundColor: \"#b100e8\",\n          color: \"white\",\n          zIndex: 3,\n        }}\n      >\n        {pourcentagePromotion} %\n      </Typography>\n    ) : null;\n\n    return (\n      <Card\n        style={{\n          display: \"flex\",\n          // flexDirection: \"row\",\n          zIndex: 1,\n          position: \"relative\",\n          marginBottom: 40,\n        }}\n        className={classes.card}\n        onMouseOver={this.onMouseOver}\n        onMouseOut={this.onMouseOut}\n        raised={this.state.shadow}\n      >\n        {promo}\n\n        {quantity == 0 ? (\n          <Typography\n            style={{\n              position: \"absolute\",\n              top: 0,\n              right: 0,\n              left: 0,\n              bottom: 0,\n              backgroundColor: \"rgba(0,0,0,0.5)\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              color: \"white\",\n              fontSize: \"1.5em\",\n              zIndex: 3,\n            }}\n          >\n            <span style={{ border: \"2px white solid\", padding: 10 }}>\n              Out of stock\n            </span>\n          </Typography>\n        ) : (\n          <p style={{ margin: 0, padding: 0 }}></p>\n        )}\n\n        <CardActionArea\n       \n          component={Link}\n          to={`/type/${type.split(\" \").join(\"_\")}/${title\n            .split(\" \")\n            .join(\"_\")}`}\n        >\n          <Grid container xs={12} style={{ height: \"100%\" }}>\n            <Grid item xs={12} md={3}>\n              <CardMedia\n                className={classes.imageItem}\n                image={this.state.shadow ? itemImagesUrl[1] : itemImagesUrl[0]}\n                title={title}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <CardContent className={classes.content}>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  {type}\n                </Typography>\n                <Typography style={{ fontSize: \"1.5em\" }} color=\"textPrimary\">\n                  {title}\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  color=\"textSecondary\"\n                  style={{ marginTop: 20 }}\n                >\n                  {description}\n                </Typography>\n              </CardContent>\n            </Grid>\n            <Grid\n              container\n              xs={12}\n              md={3}\n              direction=\"column\"\n              alignItems=\"center\"\n              justify=\"center\"\n            >\n              <Typography\n                variant=\"body1\"\n                color=\"textPrimary\"\n                style={{ padding: 20 }}\n              >\n                <span\n                  style={promotion ? { textDecoration: \"line-through\" } : {}}\n                >\n                  {price + \" DZD\"}\n                </span>\n                <span style={{ marginLeft: 20 }}>{newPrice}</span>\n              </Typography>\n              <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                style={{ Zindex: 3, borderRadius: 0, maxHeight: 50 }}\n                fullWidth\n                onClick={() => this.handleAdd(item)}\n              >\n                Add to panel\n              </Button>\n            </Grid>\n          </Grid>\n        </CardActionArea>\n\n        {this.state.adminError && (\n          <Alert\n            severity=\"warning\"\n            onClose={() => this.setState({ adminError: false })}\n          >\n            you can't add items as admin\n          </Alert>\n        )}\n      </Card>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  authenticatedAdmin: state.user.authenticatedAdmin,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(ItemCardOne));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\ScrollebarAdmin.js",[],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\NavbarAdmin.js",["404","405","406","407","408","409","410","411"],"import React, { Component, Fragment } from \"react\";\nimport Media from \"react-media\";\n\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n//import NavButton from \"./NavButton\";\nimport Search from \"../Search\";\n//import Menu from \"./Menu\";\n\n//MUI stuff\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Badge from \"@material-ui/core/Badge\";\n\n//icons mui\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport ShoppingBasketOutlinedIcon from \"@material-ui/icons/ShoppingBasketOutlined\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  list: {\n    width: 300,\n  },\n  toolbar: {\n    minHeight: 128,\n  },\n\n  navbar: {\n    backgroundColor: \"white\",\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  spacer: {\n    flex: 1,\n  },\n  logo: {\n    height: \"60px\",\n    fontSize: \"2em\",\n  },\n  button: {\n    height: \"60px\",\n    fontSize: \"1.2em\",\n  },\n  items: {\n    height: 55,\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n  },\n  item: {\n    display: \"flex\",\n    // flexDirection: \"row-reverse\",\n    fontSize: \"1.2em\",\n    color: \"#003668\",\n  },\n  sign: {\n    marginRight: 20,\n  },\n});\n\nclass NavbarAdmin extends Component {\n  state = {\n    left: false,\n    value: undefined,\n    open: false,\n  };\n\n  handleChangeMenu = (event, newValue) => {\n    this.setState({ value: newValue });\n  };\n  handleChangeHome = (event) => {\n    this.setState({ value: undefined });\n  };\n\n  toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    this.setState({ [anchor]: open });\n  };\n\n  render() {\n    const { classes, stores, types, authenticated, cart } = this.props;\n\n    return (\n      <div>\n        <Media\n          queries={{\n            small: \"(max-width: 1010px)\",\n            large: \"(min-width: 1010px)\",\n          }}\n        >\n          {(matches) => (\n            <Fragment>\n              {matches.small && (\n                <Toolbar className=\".nav-container\">\n                  <Grid container>\n                    <Grid container xs={12} direction=\"row\">\n                      <Grid\n                        container\n                        xs={4}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                      >\n                        <Search />\n                      </Grid>\n\n                      <Grid container xs={4} justify=\"center\">\n                        <Button\n                          className={classes.logo}\n                          color=\"primary\"\n                          component={Link}\n                          to=\"/\"\n                          onClick={this.handleChangeHome}\n                        >\n                          ETHE\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Toolbar>\n              )}\n              {matches.large && (\n                <Toolbar className=\"nav-container\">\n                  <Grid container>\n                    <Grid\n                      container\n                      xs={12}\n                      direction=\"row\"\n                      justify=\"space-between\"\n                    >\n                      <Grid\n                        container\n                        xs={4}\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                      >\n                        <Button\n                          className={classes.logo}\n                          color=\"primary\"\n                          component={Link}\n                          to=\"/\"\n                          onClick={this.handleChangeHome}\n                        >\n                          ETHEREAL\n                        </Button>\n                      </Grid>\n                      <Grid container xs={4} justify=\"space-around\">\n                        <Button\n                          className={classes.button}\n                          color=\"textPrimary\"\n                          style={{\n                            backgroundColor: \"transparent\",\n                            textTransform: \"none\",\n                          }}\n                          component={Link}\n                          to=\"/admin/website\"\n                          onClick={this.handleChangeHome}\n                        >\n                          WEBSITE\n                        </Button>\n                        <Button\n                          className={classes.button}\n                          color=\"textPrimary\"\n                          style={{\n                            backgroundColor: \"transparent\",\n                            textTransform: \"none\",\n                          }}\n                          component={Link}\n                          to=\"/admin/shop\"\n                          onClick={this.handleChangeHome}\n                        >\n                          SHOP\n                        </Button>\n                        <Button\n                          className={classes.button}\n                          color=\"textPrimary\"\n                          style={{\n                            backgroundColor: \"transparent\",\n                            textTransform: \"none\",\n                          }}\n                          component={Link}\n                          to=\"/admin/commands\"\n                          onClick={this.handleChangeHome}\n                        >\n                          COMMANDS\n                        </Button>\n                      </Grid>\n\n                      <Grid\n                        container\n                        xs={4}\n                        justify=\"flex-end\"\n                        alignItems=\"center\"\n                      >\n                        <Search />\n                      </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" justify=\"center\"></Grid>\n                  </Grid>\n                </Toolbar>\n              )}\n            </Fragment>\n          )}\n        </Media>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stores: state.stores,\n  types: state.types,\n  user: state.user,\n  cart: state.cart,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(NavbarAdmin));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\shop.js",["412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463"],"import React, { Component } from \"react\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../redux/actions/userActions\";\nimport noprogram from \"../image/noprogram.gif\";\n\n//admin component\nimport ItemsTab from \"../component/admin/ItemsTab\";\nimport TypesTab from \"../component/admin/TypesTab\";\nimport StoresTab from \"../component/admin/StoresTab\";\nimport CommandTab from '../component/admin/CommandTab'\n//mui stuff\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n//icons\nimport ReceiptIcon from \"@material-ui/icons/Receipt\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ColorLensIcon from \"@material-ui/icons/ColorLens\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport StorefrontIcon from \"@material-ui/icons/Storefront\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport LocalGroceryStoreIcon from \"@material-ui/icons/LocalGroceryStore\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport store from \"../redux/store\";\nimport { SET_ADMIN_NAV, UNSET_ADMIN_NAV } from \"../redux/types\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  userimage: {\n    height: 150,\n    width: 150,\n    margin: 20,\n  },\n\n  profile: {\n    margin: 20,\n  },\n\n  info: {\n    marginTop: 10,\n    display: \"flex\",\n    alignItem: \"center\",\n  },\n  editButton: {\n    //width: \"90%\",\n    height: 50,\n    margin: 20,\n  },\n  title: {\n    width: \"100%\",\n    textAlign: \"center\",\n    height: 50,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  view: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  photo: {\n    marginTop: 20,\n    marginLeft: -10,\n  },\n  more: {\n    marginTop: 10,\n    width: \"100%\",\n  },\n  progButton: {\n    width: \"50%\",\n    height: 50,\n  },\n  noprogram: {\n    height: 150,\n    width: 150,\n  },\n  noProgContent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    marginBottom: 20,\n  },\n  longButton: {\n    paddingRight: 50,\n    color: \"#b100e8\",\n    fontSize: \"1.1em\",\n    textTransform: \"none\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n  },\n});\n\nclass shop extends Component {\n  state = {\n    in: false,\n    shopValue: \"5\",\n    shopMenu: false,\n  };\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  componentDidMount() {\n    store.dispatch({ type: SET_ADMIN_NAV });\n  }\n  componentWillUnmount() {\n    store.dispatch({ type: UNSET_ADMIN_NAV });\n  }\n\n  handleMoreItem = () => {\n    this.setState({ in: !this.state.in });\n  };\n  handleLogout = () => {\n    this.props.logout(this.props.history);\n  };\n\n  handleImageChange = (event) => {\n    const image = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", image, image.name);\n\n    this.props.uploadImage(formData);\n  };\n  handleClickUpload = () => {\n    const upload = document.getElementById(\"inputPic\");\n    upload.click();\n  };\n  handleClickShop = (e) => {\n    this.setState({ shopValue: e.currentTarget.value });\n  };\n  handleClickShopMenu = () => {\n    this.setState({ shopMenu: !this.state.shopMenu });\n  };\n\n  render() {\n    const { classes, admin } = this.props;\n\n    return (\n      <Grid container direction=\"row\" style={{ padding: \"20px 0px 20px 0px\" }}>\n        <Grid\n          item\n          sm=\"auto\"\n          xs={12}\n          style={{ padding: 0, backgroundColor: \"#f2e5ff\" }}\n        >\n          <Grid item style={{ padding: 10, backgroundColor: \"#86769b\" }}>\n            <IconButton\n              onClick={this.handleClickShopMenu}\n              style={{ borderRadius: 0 }}\n            >\n              {this.state.shopMenu ? (\n                <ArrowBackIcon style={{ color: \"white\" }} />\n              ) : (\n                <ArrowForwardIcon style={{ color: \"white\" }} />\n              )}\n            </IconButton>\n          </Grid>\n          <Divider />\n\n          <Grid\n            container\n            direction=\"column\"\n            style={this.state.shopMenu ? { padding: 10 } : { display: \"none\" }}\n          >\n            <Button\n              style={\n                this.state.shopValue == 3\n                  ? { color: \"#b100e8\" }\n                  : { color: \"#495057\" }\n              }\n              className={classes.longButton}\n              value=\"3\"\n              color={this.state.shopValue == 3 ? \"primary\" : undefined}\n              variant={this.state.shopValue == 3 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <StorefrontIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 3\n                    ? { margin: \"6 15 6 6\", color: \"#b100e8\" }\n                    : { margin: \"6 15 6 6\", color: \"#495057\" }\n                }\n              />\n              Stores checkout page\n            </Button>\n            <Button\n              style={\n                this.state.shopValue == 4\n                  ? { color: \"#b100e8\" }\n                  : { color: \"#495057\" }\n              }\n              className={classes.longButton}\n              value=\"4\"\n              color={this.state.shopValue == 4 ? \"primary\" : undefined}\n              variant={this.state.shopValue == 4 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <CategoryIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 4\n                    ? { margin: \"6 15 6 6\", color: \"#b100e8\" }\n                    : { margin: \"6 15 6 6\", color: \"#495057\" }\n                }\n              />\n              Types checkout page\n            </Button>\n            <Button\n              style={\n                this.state.shopValue == 5\n                  ? { color: \"#b100e8\" }\n                  : { color: \"#495057\" }\n              }\n              className={classes.longButton}\n              value=\"5\"\n              color={this.state.shopValue == 5 ? \"primary\" : undefined}\n              variant={this.state.shopValue == 5 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <LocalGroceryStoreIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 5\n                    ? { margin: \"6 15 6 6\", color: \"#b100e8\" }\n                    : { margin: \"6 15 6 6\", color: \"#495057\" }\n                }\n              />\n              Items checkout page\n            </Button>\n            <Divider />\n            <Button\n              style={\n                this.state.shopValue == 6\n                  ? { color: \"#b100e8\" }\n                  : { color: \"#495057\" }\n              }\n              className={classes.longButton}\n              value=\"6\"\n              color={this.state.shopValue == 6 ? \"primary\" : undefined}\n              variant={this.state.shopValue == 6 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <ReceiptIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 6\n                    ? { margin: \"6 15 6 6\", color: \"#b100e8\" }\n                    : { margin: \"6 15 6 6\", color: \"#495057\" }\n                }\n              />\n              Commands checkout page\n            </Button>\n            <Divider />\n            <Grid container direction=\"row\">\n              <Button\n                style={\n                  this.state.shopValue == 2\n                    ? { color: \"#b100e8\" }\n                    : { color: \"#495057\" }\n                }\n                className={classes.longButton}\n                value=\"2\"\n                color={this.state.shopValue == 2 ? \"primary\" : undefined}\n                variant={this.state.shopValue == 2 ? \"text\" : undefined}\n                onClick={this.handleClickShop}\n              >\n                <ColorLensIcon\n                  fontSize=\"medium\"\n                  style={\n                    this.state.shopValue == 2\n                      ? { margin: \"6 15 6 6\", color: \"#b100e8\" }\n                      : { margin: \"6 15 6 6\", color: \"#495057\" }\n                  }\n                />\n                Website checkout page\n              </Button>\n              <IconButton\n                aria-label=\"admin\"\n                style={{ borderRadius: 0 }}\n                value=\"1\"\n                variant={this.state.shopValue == 1 ? \"text\" : undefined}\n                onClick={this.handleClickShop}\n              >\n                <SettingsIcon\n                  fontSize=\"medium\"\n                  style={\n                    this.state.shopValue == 1\n                      ? { marginLeft: 2, color: \"#b100e8\" }\n                      : { marginLeft: 2, color: \"#495057\" }\n                  }\n                />\n              </IconButton>\n            </Grid>\n            <Divider />\n          </Grid>\n          <Grid\n            container\n            direction=\"column\"\n            style={this.state.shopMenu ? { display: \"none\" } : { padding: 10 }}\n          >\n            <IconButton\n              aria-label=\"add store\"\n              style={{ borderRadius: 0 }}\n              value=\"3\"\n              variant={this.state.shopValue == 3 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <StorefrontIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 3\n                    ? { marginLeft: 2, color: \"#b100e8\" }\n                    : { marginLeft: 2, color: \"#495057\" }\n                }\n              />\n            </IconButton>\n            <IconButton\n              aria-label=\"add type\"\n              style={{ borderRadius: 0 }}\n              value=\"4\"\n              variant={this.state.shopValue == 4 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <CategoryIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 4\n                    ? { marginLeft: 2, color: \"#b100e8\" }\n                    : { marginLeft: 2, color: \"#495057\" }\n                }\n              />\n            </IconButton>\n            <IconButton\n              aria-label=\"add item\"\n              style={{ borderRadius: 0 }}\n              value=\"5\"\n              variant={this.state.shopValue == 5 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <LocalGroceryStoreIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 5\n                    ? { marginLeft: 2, color: \"#b100e8\" }\n                    : { marginLeft: 2, color: \"#495057\" }\n                }\n              />\n            </IconButton>\n            <Divider />\n            <IconButton\n              aria-label=\"add item\"\n              style={{ borderRadius: 0 }}\n              value=\"6\"\n              variant={this.state.shopValue == 6 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <ReceiptIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 6\n                    ? { marginLeft: 2, color: \"#b100e8\" }\n                    : { marginLeft: 2, color: \"#495057\" }\n                }\n              />\n            </IconButton>\n            <Divider />\n            <IconButton\n              aria-label=\"add type\"\n              style={{ borderRadius: 0 }}\n              value=\"2\"\n              variant={this.state.shopValue == 2 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <ColorLensIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 2\n                    ? { marginLeft: 2, color: \"#b100e8\" }\n                    : { marginLeft: 2, color: \"#495057\" }\n                }\n              />\n            </IconButton>\n            <IconButton\n              aria-label=\"admin\"\n              style={{ borderRadius: 0 }}\n              value=\"1\"\n              variant={this.state.shopValue == 1 ? \"text\" : undefined}\n              onClick={this.handleClickShop}\n            >\n              <SettingsIcon\n                fontSize=\"medium\"\n                style={\n                  this.state.shopValue == 1\n                    ? { marginLeft: 2, color: \"#b100e8\" }\n                    : { marginLeft: 2, color: \"#495057\" }\n                }\n              />\n            </IconButton>\n          </Grid>\n        </Grid>\n\n        <Grid item sm xs={12} style={{ padding: \"0px 20px 20px 20px\" }}>\n          <Grid item xs={12}>\n            {this.state.shopValue == 1 ? <h1>value1</h1> : <p></p>}\n            {this.state.shopValue == 2 ? <h1>value2</h1> : <p></p>}\n            {this.state.shopValue == 3 ? <StoresTab /> : <p></p>}\n            {this.state.shopValue == 4 ? <TypesTab /> : <p></p>}\n            {this.state.shopValue == 5 ? <ItemsTab /> : <p></p>}\n            {this.state.shopValue == 6 ? <CommandTab /> : <p></p>}\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapActionToProps = {\n  logout,\n};\nconst mapStateToProps = (state) => ({\n  admin: state.user.website[1],\n});\n\nexport default connect(\n  mapStateToProps,\n  mapActionToProps\n)(withStyles(styles)(shop));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\commands.js",["464","465","466","467","468","469","470","471","472","473","474","475","476","477","478"],"import React, { Component } from \"react\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../redux/actions/userActions\";\nimport noprogram from \"../image/noprogram.gif\";\n\n//mui stuff\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n//icons\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport store from \"../redux/store\";\nimport { SET_ADMIN_NAV, UNSET_ADMIN_NAV } from \"../redux/types\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nclass commands extends Component {\n  state = {\n    in: false,\n  };\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  componentDidMount() {\n    store.dispatch({ type: SET_ADMIN_NAV });\n  }\n  componentWillUnmount() {\n    store.dispatch({ type: UNSET_ADMIN_NAV });\n  }\n\n  handleMoreItem = () => {\n    this.setState({ in: !this.state.in });\n  };\n  handleLogout = () => {\n    this.props.logout(this.props.history);\n  };\n\n  handleImageChange = (event) => {\n    const image = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", image, image.name);\n\n    this.props.uploadImage(formData);\n  };\n  handleClickUpload = () => {\n    const upload = document.getElementById(\"inputPic\");\n    upload.click();\n  };\n\n  render() {\n    const { classes, admin } = this.props;\n\n    return <Grid container>commands</Grid>;\n  }\n}\n\nconst mapActionToProps = {\n  logout,\n};\nconst mapStateToProps = (state) => ({\n  admin: state.user.website[1],\n});\n\nexport default connect(\n  mapStateToProps,\n  mapActionToProps\n)(withStyles(styles)(commands));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\pages\\website.js",["479","480","481","482","483","484","485","486","487","488","489","490","491","492","493"],"import React, { Component } from \"react\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../redux/actions/userActions\";\nimport noprogram from \"../image/noprogram.gif\";\n\n//mui stuff\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\n//icons\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport store from \"../redux/store\";\nimport { SET_ADMIN_NAV, UNSET_ADMIN_NAV } from \"../redux/types\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n});\n\nclass website extends Component {\n  state = {\n    in: false,\n  };\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n  componentDidMount() {\n    store.dispatch({ type: SET_ADMIN_NAV });\n  }\n  componentWillUnmount() {\n    store.dispatch({ type: UNSET_ADMIN_NAV });\n  }\n\n  handleMoreItem = () => {\n    this.setState({ in: !this.state.in });\n  };\n  handleLogout = () => {\n    this.props.logout(this.props.history);\n  };\n\n  handleImageChange = (event) => {\n    const image = event.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", image, image.name);\n\n    this.props.uploadImage(formData);\n  };\n  handleClickUpload = () => {\n    const upload = document.getElementById(\"inputPic\");\n    upload.click();\n  };\n\n  render() {\n    const { classes, admin } = this.props;\n\n    return <Grid container>website</Grid>;\n  }\n}\n\nconst mapActionToProps = {\n  logout,\n};\nconst mapStateToProps = (state) => ({\n  admin: state.user.website[1],\n});\n\nexport default connect(\n  mapStateToProps,\n  mapActionToProps\n)(withStyles(styles)(website));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\StoresTab.js",["494","495","496","497","498","499","500","501","502","503"],"import { React, Component } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n//component\n\nimport CreateStore from \"./CreateStore\";\nimport EditStore from \"./EditStore\";\nimport DeleteStore from \"./DeleteStore\";\n//mui stuff\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n//icons\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  itemButton: {\n    marginRight: 20,\n    borderRadius: 0,\n    textTransform: \"none\",\n  },\n});\nclass StoresTab extends Component {\n  state = {\n    cellSelected: false,\n    storeData: \"\",\n  };\n  handleClickCell = (e) => {\n    this.setState({ cellSelected: true });\n    this.setState({ storeData: e.data });\n  };\n  componentWillUnmount() {\n    this.setState({ cellSelected: false });\n  }\n  render() {\n    const { classes, stores } = this.props;\n    const newStores = stores.map((store) => ({ ...store, id: store.storeId }));\n    return (\n      <div style={{ height: 250, width: \"100%\" }}>\n        <Grid container xs={12} direction=\"row\" style={{ paddingBottom: 20 }}>\n          <CreateStore />\n\n          <EditStore\n            cellSelected={this.state.cellSelected}\n            storeData={this.state.storeData}\n          />\n\n          <DeleteStore\n            storeId={this.state.storeData.storeId}\n            cellSelected={this.state.cellSelected}\n          />\n        </Grid>\n\n        <Divider />\n        <p style={{ marginTop: 10 }}></p>\n\n        <p style={{ marginTop: 10 }}></p>\n\n        <DataGrid\n          pageSize=\"8\"\n          onRowSelected={this.handleClickCell}\n          autoHeight\n          columns={[\n            { field: \"id\" },\n            { field: \"title\", width: 200 },\n            { field: \"description\", width: 450 },\n          ]}\n          rows={newStores}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  stores: state.stores,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(StoresTab));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\TypesTab.js",["504","505","506","507","508","509","510","511","512","513"],"import { React, Component } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n//component\nimport CreateType from \"./CreateType\";\nimport EditType from \"./EditType\";\nimport DeleteType from \"./DeleteType\";\n//mui stuff\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n//icons\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  itemButton: {\n    marginRight: 20,\n    borderRadius: 0,\n    textTransform: \"none\",\n  },\n});\nclass TypesTab extends Component {\n  state = {\n    cellSelected: false,\n    selectedType: \"\",\n  };\n\n  handleClickCell = (e) => {\n    this.setState({ cellSelected: true });\n    this.setState({ selectedType: e.data });\n  };\n  componentWillUnmount() {\n    this.setState({ cellSelected: false });\n  }\n\n  render() {\n    const { classes, types } = this.props;\n    const newTypes = types.map((type) => ({ ...type, id: type.typeId }));\n\n    return (\n      <div style={{ height: 250, width: \"100%\" }}>\n        <Grid container xs={12} direction=\"row\" style={{ paddingBottom: 20 }}>\n          <CreateType />\n\n          <EditType\n            cellSelected={this.state.cellSelected}\n            typeData={this.state.selectedType}\n          />\n\n          <DeleteType\n            cellSelected={this.state.cellSelected}\n            typeId={this.state.selectedType.typeId}\n          />\n        </Grid>\n        <Divider />\n        <p style={{ marginTop: 10 }}></p>\n        <p style={{ marginTop: 10 }}></p>\n        <DataGrid\n          pageSize=\"8\"\n          onRowSelected={this.handleClickCell}\n          autoHeight\n          columns={[\n            { field: \"id\" },\n            { field: \"store\" },\n            { field: \"title\", width: 200 },\n          ]}\n          rows={newTypes}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  types: state.types,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(TypesTab));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\ItemsTab.js",["514","515","516","517","518","519","520","521"],"import { React, Component } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n//components\nimport EditItem from \"./EditItem\";\nimport DeleteItem from \"./DeleteItem\";\nimport CreateItem from \"./CreateItem\";\n\n//mui stuff\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = (theme) => ({\n  ...theme.spreadThis,\n  itemButton: {\n    marginRight: 20,\n    borderRadius: 0,\n    textTransform: \"none\",\n  },\n});\nclass ItemsTab extends Component {\n  state = {\n    cellSelected: false,\n    selectedItem: \"\",\n  };\n  handleClickCell = (e) => {\n    this.setState({ cellSelected: true });\n    this.setState({ selectedItem: e.row });\n  };\n  componentWillUnmount() {\n    this.setState({ cellSelected: false });\n  }\n  render() {\n    const { classes, items } = this.props;\n    const newItems = items.map((item) => ({ ...item, id: item.itemId }));\n\n    return (\n      <div style={{ width: \"100%\" }}>\n        <Grid container xs={12} direction=\"row\" style={{ paddingBottom: 20 }}>\n          <CreateItem />\n          <EditItem\n            cellSelected={this.state.cellSelected}\n            itemData={this.state.selectedItem}\n          />\n\n          <DeleteItem\n            cellSelected={this.state.cellSelected}\n            itemId={this.state.selectedItem.itemId}\n          />\n        </Grid>\n\n        <Divider />\n        <p style={{ marginTop: 10 }}></p>\n        <Grid container xs={12}></Grid>\n\n        <p style={{ marginTop: 10 }}></p>\n\n        <DataGrid\n          pageSize=\"8\"\n          onRowClick={this.handleClickCell}\n          autoHeight\n          columns={[\n            { field: \"id\" },\n            { field: \"store\" },\n            { field: \"type\", width: 120 },\n            { field: \"ref\" },\n            { field: \"title\", width: 120 },\n            { field: \"quantity\", width: 120 },\n            { field: \"price\", width: 120 },\n            { field: \"promotion\", width: 120 },\n            { field: \"new\" },\n            { field: \"restock\" },\n            { field: \"sold\" },\n            { field: \"rate\" },\n          ]}\n          rows={newItems}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  items: state.items,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(ItemsTab));\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\EditItem.js",["522","523","524","525","526","527","528","529"],"import React, { useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//components\nimport ItemImageEdit from \"./ItemImageEdit\";\n//mui\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n//icons\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editItem } from \"../../redux/actions/itemsActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"46%\",\n  },\n  formControl1: {\n    margin: theme.spacing(1),\n    width: \"96%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function EditItem(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { stores } = useSelector((state) => state);\n  const { types } = useSelector((state) => state);\n\n  const [open, setOpen] = React.useState(false);\n  const [reference, setReference] = React.useState(\"\");\n  const [itemTitle, setItemTitle] = React.useState(\"\");\n  const [Store, setStore] = React.useState(\"\");\n  const [CurrentTypes, setTypes] = React.useState([]);\n  const [type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [quantity, setQuantity] = React.useState(0);\n  const [price, setPrice] = React.useState(0);\n\n  const [checkedNew, setCheckedNew] = React.useState(false);\n  const [checkedRestock, setCheckedRestock] = React.useState(false);\n  const [checkedPromotion, setCheckedPromotion] = React.useState(false);\n  const [poucentagePromotion, setPourcentagePromotion] = React.useState(0);\n  const [alert, setAlert] = React.useState(false);\n  useEffect(() => {\n    setReference(props.itemData.ref);\n    setItemTitle(props.itemData.title);\n    setStore(props.itemData.store);\n    setType(props.itemData.type);\n    setDescription(props.itemData.description);\n    setQuantity(props.itemData.quantity);\n    setPrice(props.itemData.price);\n    setCheckedNew(props.itemData.new);\n    setCheckedPromotion(props.itemData.promotion);\n    setPourcentagePromotion(props.itemData.pourcentagePromotion);\n    setTypes(types?.filter((type) => type.store === props.itemData.store));\n  }, [props.itemData]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeStore = (e) => {\n    setStore(e.target.value);\n    const currentTypes = types?.filter((type) => type.store === e.target.value);\n    setTypes(currentTypes);\n  };\n  const handleChangeType = (e) => {\n    setType(e.target.value);\n  };\n  const toggleCheckedNew = () => {\n    setCheckedNew((prev) => !prev);\n  };\n\n  const toggleCheckedRestock = () => {\n    setCheckedRestock((prev) => !prev);\n  };\n\n  const toggleCheckedPromotion = () => {\n    setCheckedPromotion((prev) => !prev);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (type === false) {\n      setAlert(true);\n    } else {\n      setOpen(false);\n      setAlert(false);\n      const editedItem = {\n        type: type,\n        ref: reference,\n        title: itemTitle,\n        description: description,\n        price: parseFloat(price),\n        quantity: parseFloat(quantity),\n        promotion: checkedPromotion,\n        pourcentagePromotion: parseFloat(poucentagePromotion),\n        new: checkedNew,\n        restock: checkedRestock,\n      };\n      dispatch(editItem(props.itemData.itemId, editedItem));\n      setCheckedNew(false);\n      setCheckedPromotion(false);\n      setDescription(\"\");\n      setType(\"\");\n      setStore(\"\");\n      setReference(\"\");\n      setItemTitle(\"\");\n      setCheckedRestock(false);\n      setPrice(0);\n      setPourcentagePromotion(0);\n      setQuantity(0);\n    }\n  };\n  if (poucentagePromotion < 0) {\n    setPourcentagePromotion(0);\n  }\n  if (quantity < 0) {\n    setQuantity(0);\n  }\n\n  return (\n    <div>\n      <Button\n        startIcon={<EditIcon />}\n        onClick={handleClickOpen}\n        style={\n          props.cellSelected\n            ? {\n                marginRight: 20,\n                borderRadius: 0,\n                backgroundColor: \"#0096c7\",\n                color: \"white\",\n              }\n            : { display: \"none\" }\n        }\n      >\n        edit\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{ style: { borderRadius: 0 } }}\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"md\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <form onSubmit={handleSubmit}>\n          <Grid container xs={12} justify=\"space-between\">\n            <DialogTitle id=\"form-dialog-title\">Edit Item Data</DialogTitle>\n            <IconButton\n              aria-label=\"ignore\"\n              style={{ borderRadius: 0 }}\n              onClick={handleClose}\n            >\n              <ClearIcon style={{ fontSize: \"1.6em\" }} />\n            </IconButton>\n          </Grid>\n\n          <Divider />\n          <DialogContent style={{ borderRadius: 0 }}>\n            <Grid container xs={12}>\n              <Grid container xs={6}>\n                <ItemImageEdit itemImages={props.itemData.itemImagesUrl} />\n              </Grid>\n\n              <Grid container xs={6} style={{ padding: 20 }}>\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Reference\"\n                    type=\"text\"\n                    fullWidth\n                    value={reference}\n                    onChange={(e) => setReference(e.target.value)}\n                    required\n                  />\n                </FormControl>\n\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Item title\"\n                    type=\"text\"\n                    fullWidth\n                    value={itemTitle}\n                    onChange={(e) => setItemTitle(e.target.value)}\n                    required\n                  />\n                </FormControl>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Store\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={Store}\n                    onChange={handleChangeStore}\n                    label=\"Store\"\n                    required\n                  >\n                    {stores.map((store) => (\n                      <MenuItem value={store.title} key={store.id}>\n                        {store.title}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\n                  <Select\n                    disabled={!Store}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={type}\n                    onChange={handleChangeType}\n                    label=\"Type\"\n                    required\n                    error={alert}\n                  >\n                    {CurrentTypes?.map((type) => (\n                      <MenuItem value={type.title} key={type.typeId}>\n                        {type.title}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Description\"\n                    type=\"text\"\n                    fullWidth\n                    multiline\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    required\n                  />\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"number\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Quantity\"\n                    value={quantity}\n                    onChange={(e) => setQuantity(e.target.value)}\n                    required\n                  />\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"number\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Price\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                  />\n                </FormControl>\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch checked={checkedNew} onChange={toggleCheckedNew} />\n                  }\n                  label=\"New Item\"\n                  color=\"primary\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedRestock}\n                      onChange={toggleCheckedRestock}\n                    />\n                  }\n                  label=\"Restock Item\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedPromotion}\n                      onChange={toggleCheckedPromotion}\n                    />\n                  }\n                  label=\"Item in Promotion\"\n                />\n\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    disabled={!checkedPromotion}\n                    type=\"number\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Pourcentage %\"\n                    value={poucentagePromotion}\n                    onChange={(e) => setPourcentagePromotion(e.target.value)}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Grid container xs={12} justify=\"center\">\n              <Button\n                type=\"submit\"\n                style={{ borderRadius: 0, width: \"50%\" }}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n              >\n                save changes\n              </Button>\n            </Grid>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\ItemImageEdit.js",["530","531","532"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\n//mui\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\n//icons\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst AutoPlaySwipeableViews = SwipeableViews;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    width: \"100%\",\n\n    flexGrow: 1,\n    zIndex: 2,\n  },\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: 50,\n    paddingLeft: theme.spacing(4),\n    backgroundColor: theme.palette.background.default,\n  },\n  img: {\n    height: 350,\n    display: \"block\",\n    width: \"100%\",\n    overflow: \"hidden\",\n    maxHeight: 400,\n    zIndex: 1,\n    // objectFit: \"contain\",\n  },\n  typeName: {\n    float: \"left\",\n    position: \"absolute\",\n    display: \"flex\",\n    direction: \"column\",\n    justifyContent: \"flex-start\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n\n    zIndex: 4,\n  },\n  typeNameDelete: {\n    float: \"left\",\n    position: \"absolute\",\n    display: \"flex\",\n    direction: \"column\",\n    justifyContent: \"flex-start\",\n\n    top: 110,\n    right: 0,\n\n    zIndex: 5,\n  },\n  changeButton: {\n    float: \"left\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    padding: 20,\n    zIndex: 3,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  stepper: {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"100%\",\n    background: \"transparent\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n\n  //list images\n\n  rootList: {\n    marginBottom: 10,\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    zIndex: 4,\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\",\n    zIndex: 4,\n  },\n}));\n\nfunction ItemImageEdit(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const maxSteps = props.itemImages?.length;\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStepChange = (step) => {\n    setActiveStep(step);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.rootList}>\n        <GridList className={classes.gridList} cols={4} cellHeight={100}>\n          {props.itemImages?.map((tile, index) => (\n            <GridListTile\n              key={tile}\n              step={index}\n              onClick={() => handleStepChange(index)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <img src={tile} style={{ objectFit: \"contain\", width: \"100%\" }} />\n              <GridListTileBar\n                style={{\n                  height: \"40%\",\n                  top: 5,\n                  left: \"57%\",\n                  backgroundColor: \"transparent\",\n                }}\n                actionIcon={\n                  <IconButton\n                    variant=\"contained\"\n                    size=\"medium\"\n                    style={{\n                      position: \"absolute\",\n                      top: 0,\n                      right: 40,\n                      bottom: 0,\n                      left: 0,\n                      borderRadius: 0,\n                      backgroundColor: \"rgba(0,0,0,0.6)\",\n                      color: \"white\",\n                    }}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n\n      <Box className={classes.typeName}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          size=\"large\"\n          style={{\n            borderRadius: 0,\n            backgroundColor: \"rgba(0,0,0,0.6)\",\n            color: \"white\",\n          }}\n          startIcon={<AddAPhotoIcon />}\n        >\n          Add new image\n        </Button>\n      </Box>\n      <Box className={classes.typeNameDelete}>\n        <IconButton\n          variant=\"contained\"\n          size=\"large\"\n          style={{\n            borderRadius: 0,\n            backgroundColor: \"rgba(0,0,0,0.6)\",\n            color: \"white\",\n          }}\n          disabled={activeStep === maxSteps - 1}\n        >\n          <DeleteForeverIcon />\n        </IconButton>\n      </Box>\n      <AutoPlaySwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={activeStep}\n        onChangeIndex={handleStepChange}\n        enableMouseEvents\n      >\n        {props.itemImages?.map((step, index) => (\n          <div key={step}>\n            {Math.abs(activeStep - index) <= maxSteps ? (\n              <img\n                className={classes.img}\n                src={step}\n                alt={step}\n                style={{ objectFit: \"cover\" }}\n              />\n            ) : null}\n          </div>\n        ))}\n      </AutoPlaySwipeableViews>\n      <div className={classes.changeButton}>\n        <IconButton\n          color=\"primary\"\n          variant=\"outlined\"\n          size=\"medium\"\n          onClick={handleBack}\n          disabled={activeStep === 0}\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowRight fontSize=\"large\" />\n          ) : (\n            <KeyboardArrowLeft fontSize=\"large\" />\n          )}\n        </IconButton>\n        <IconButton\n          color=\"primary\"\n          size=\"medium\"\n          onClick={handleNext}\n          disabled={activeStep === maxSteps - 1}\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowLeft fontSize=\"large\" />\n          ) : (\n            <KeyboardArrowRight fontSize=\"large\" />\n          )}\n        </IconButton>\n      </div>\n      <MobileStepper\n        className={classes.stepper}\n        steps={maxSteps}\n        position=\"static\"\n        variant=\"dots\"\n        activeStep={activeStep}\n      />\n    </div>\n  );\n}\n\nexport default ItemImageEdit;\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\DeleteStore.js",["533"],"import React from \"react\";\n\n//mui\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\n\n//icons\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nimport { useDispatch } from \"react-redux\";\nimport { deleteStore } from \"../../redux/actions/storesActions\";\n\nexport default function DeleteStore(props) {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleDelete = () => {\n    dispatch(deleteStore(props.storeId));\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        startIcon={<DeleteForeverIcon />}\n        onClick={handleClickOpen}\n        style={\n          props.cellSelected\n            ? {\n                marginRight: 20,\n                borderRadius: 0,\n                backgroundColor: \"#e01e37\",\n                color: \"white\",\n              }\n            : { display: \"none\" }\n        }\n      >\n        delete\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">Delete Store</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n            if you delete the store you cant bring it back latter. are you sur\n            you want to delete this store ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleDelete}\n            variant=\"contained\"\n            style={{\n              borderRadius: 0,\n              backgroundColor: \"#e63946\",\n              color: \"white\",\n            }}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\CreateStore.js",["534","535","536","537","538","539","540","541","542","543","544"],"import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n//components\nimport ItemImageEdit from \"./ItemImageEdit\";\n//mui\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n//icons\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nimport noprogram from \"../../image/noprogram.gif\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addStore } from \"../../redux/actions/storesActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"46%\",\n  },\n  formControl1: {\n    margin: theme.spacing(1),\n    width: \"96%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  itemButton: {\n    marginRight: 20,\n    borderRadius: 0,\n    textTransform: \"none\",\n  },\n}));\n\nexport default function CreateStore(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { ui } = useSelector((state) => state);\n\n  const [open, setOpen] = React.useState(false);\n  const [checkedNew, setCheckedNew] = React.useState(false);\n  const [checkedRestock, setCheckedRestock] = React.useState(false);\n  const [checkedPromotion, setCheckedPromotion] = React.useState(false);\n  const [storeTitle, setStoreTitle] = React.useState(\"\");\n  const [storeDescription, setStoreDescription] = React.useState(\"\");\n  const [reference, setReference] = React.useState(\"\");\n  const [pourcentagePromotion, setPourcentagePromotion] = React.useState(0);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const toggleCheckedNew = () => {\n    setCheckedNew((prev) => !prev);\n  };\n\n  const toggleCheckedRestock = () => {\n    setCheckedRestock((prev) => !prev);\n  };\n\n  const toggleCheckedPromotion = () => {\n    setCheckedPromotion((prev) => !prev);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newStore = {\n      title: storeTitle,\n      description: storeDescription,\n      ref: reference,\n      promotion: checkedPromotion,\n      restock: checkedRestock,\n      new: checkedNew,\n      pourcentagePromotion: parseFloat(pourcentagePromotion),\n    };\n    dispatch(addStore(newStore));\n    if (ui.errors) {\n      alert(\"error\");\n    } else {\n      setOpen(false);\n      setStoreTitle(\"\");\n      setStoreDescription(\"\");\n      setReference(\"\");\n      setCheckedRestock(false);\n      setCheckedPromotion(false);\n      setCheckedNew(false);\n      setPourcentagePromotion(0);\n    }\n  };\n  if (pourcentagePromotion < 0) {\n    setPourcentagePromotion(0);\n  }\n\n  return (\n    <div>\n      <Button\n        disableElevation\n        className={classes.itemButton}\n        value=\"1\"\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        // onClick={this.handleClickItems}\n      >\n        create new Store\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{ style: { borderRadius: 0 } }}\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"md\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <form onSubmit={handleSubmit}>\n          <Grid container xs={12} justify=\"space-between\">\n            <DialogTitle id=\"form-dialog-title\">Create new Store</DialogTitle>\n            <IconButton\n              aria-label=\"ignore\"\n              style={{ borderRadius: 0 }}\n              onClick={handleClose}\n            >\n              <ClearIcon style={{ fontSize: \"1.6em\" }} />\n            </IconButton>\n          </Grid>\n\n          <Divider />\n          <DialogContent style={{ borderRadius: 0 }}>\n            <Grid container xs={12}>\n              <Grid container xs={6}>\n                <ItemImageEdit itemImages={[noprogram]} />\n              </Grid>\n\n              <Grid container xs={6} style={{ padding: 20 }}>\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Reference\"\n                    type=\"text\"\n                    fullWidth\n                    value={reference}\n                    onChange={(e) => setReference(e.target.value)}\n                    required\n                  />\n                </FormControl>\n\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Store title\"\n                    type=\"text\"\n                    fullWidth\n                    value={storeTitle}\n                    onChange={(e) => setStoreTitle(e.target.value)}\n                    required\n                  />\n                </FormControl>\n\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Description\"\n                    type=\"text\"\n                    fullWidth\n                    multiline\n                    value={storeDescription}\n                    onChange={(e) => setStoreDescription(e.target.value)}\n                    required\n                  />\n                </FormControl>\n\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch checked={checkedNew} onChange={toggleCheckedNew} />\n                  }\n                  label=\"New Store\"\n                  color=\"primary\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedRestock}\n                      onChange={toggleCheckedRestock}\n                    />\n                  }\n                  label=\"Restock Store\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedPromotion}\n                      onChange={toggleCheckedPromotion}\n                    />\n                  }\n                  label=\"Store in Promotion\"\n                />\n\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Pourcentage %\"\n                    value={pourcentagePromotion}\n                    onChange={(e) => setPourcentagePromotion(e.target.value)}\n                    required\n                    disabled={!checkedPromotion}\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Grid container xs={12} justify=\"center\">\n              <Button\n                type=\"submit\"\n                style={{ borderRadius: 0, width: \"50%\" }}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n              >\n                Create Store\n              </Button>\n            </Grid>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\DeleteItem.js",["545"],"import React from \"react\";\n\nimport { useDispatch } from \"react-redux\";\n\n//mui\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\n\n//icons\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { deleteItem } from \"../../redux/actions/itemsActions\";\n\nexport default function DeleteItem(props) {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleDelete = () => {\n    setOpen(false);\n    dispatch(deleteItem(props.itemId));\n  };\n  return (\n    <div>\n      <Button\n        startIcon={<DeleteForeverIcon />}\n        onClick={handleClickOpen}\n        style={\n          props.cellSelected\n            ? {\n                marginRight: 20,\n                borderRadius: 0,\n                backgroundColor: \"#e01e37\",\n                color: \"white\",\n              }\n            : { display: \"none\" }\n        }\n      >\n        delete\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">Delete Item</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n            if you delete the item tou cant bring it back later. Are you sur you\n            want to delete this item ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleDelete}\n            variant=\"contained\"\n            style={{\n              borderRadius: 0,\n              backgroundColor: \"#e63946\",\n              color: \"white\",\n            }}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\EditStore.js",["546","547","548","549","550","551","552","553","554","555"],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\CreateType.js",["556","557","558","559","560","561","562","563"],"import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport noprogram from \"../../image/noprogram.gif\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\n//components\nimport ItemImageEdit from \"./ItemImageEdit\";\n//mui\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n//icons\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport { addType } from \"../../redux/actions/typesActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"46%\",\n  },\n  formControl1: {\n    margin: theme.spacing(1),\n    width: \"96%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  itemButton: {\n    marginRight: 20,\n    borderRadius: 0,\n    textTransform: \"none\",\n  },\n}));\n\nexport default function CreateType(props) {\n  const classes = useStyles();\n  const { stores, ui } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = React.useState(false);\n  const [Store, setStore] = React.useState(\"\");\n  const [reference, setReference] = React.useState(\"\");\n  const [typeTitle, setTypeTitle] = React.useState(\"\");\n  const [typeDescription, setTypeDescription] = React.useState(\"\");\n  const [checkedNew, setCheckedNew] = React.useState(false);\n  const [checkedRestock, setCheckedRestock] = React.useState(false);\n  const [checkedPromotion, setCheckedPromotion] = React.useState(false);\n  const [pourcentagePromotion, setPourcentagePromotion] = React.useState(0);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeStore = (e) => {\n    setStore(e.target.value);\n\n    console.log(Store);\n  };\n\n  const toggleCheckedNew = () => {\n    setCheckedNew((prev) => !prev);\n  };\n\n  const toggleCheckedRestock = () => {\n    setCheckedRestock((prev) => !prev);\n  };\n\n  const toggleCheckedPromotion = () => {\n    setCheckedPromotion((prev) => !prev);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newType = {\n      ref: reference,\n      title: typeTitle,\n      description: typeDescription,\n      promotion: checkedPromotion,\n      pourcentagePromotion: parseFloat(pourcentagePromotion),\n      new: checkedNew,\n      restock: checkedRestock,\n    };\n    dispatch(addType(Store, newType));\n    if (ui.errors) {\n      alert(\"Please retry later we are having some problem\");\n    } else {\n      setOpen(false);\n      setCheckedNew(false);\n      setCheckedPromotion(false);\n      setTypeDescription(\"\");\n      setReference(\"\");\n      setTypeTitle(\"\");\n      setStore(\"\");\n      setCheckedRestock(false);\n      setPourcentagePromotion(0);\n    }\n  };\n\n  if (pourcentagePromotion < 0) {\n    setPourcentagePromotion(0);\n  }\n\n  return (\n    <div>\n      <Button\n        disableElevation\n        className={classes.itemButton}\n        value=\"1\"\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={handleClickOpen}\n      >\n        create new Type\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{ style: { borderRadius: 0 } }}\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"md\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <form onSubmit={handleSubmit}>\n          <Grid container xs={12} justify=\"space-between\">\n            <DialogTitle id=\"form-dialog-title\">Create new Type</DialogTitle>\n            <IconButton\n              aria-label=\"ignore\"\n              style={{ borderRadius: 0 }}\n              onClick={handleClose}\n            >\n              <ClearIcon style={{ fontSize: \"1.6em\" }} />\n            </IconButton>\n          </Grid>\n\n          <Divider />\n          <DialogContent style={{ borderRadius: 0 }}>\n            <Grid container xs={12}>\n              <Grid container xs={6}>\n                <ItemImageEdit itemImages={[noprogram]} />\n              </Grid>\n\n              <Grid container xs={6} style={{ padding: 20 }}>\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Reference\"\n                    type=\"text\"\n                    fullWidth\n                    value={reference}\n                    onChange={(e) => setReference(e.target.value)}\n                    required\n                  />\n                </FormControl>\n\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Type title\"\n                    type=\"text\"\n                    fullWidth\n                    value={typeTitle}\n                    onChange={(e) => setTypeTitle(e.target.value)}\n                    required\n                  />\n                </FormControl>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Store\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={Store}\n                    onChange={handleChangeStore}\n                    label=\"Store\"\n                    required\n                  >\n                    {stores.map((store) => (\n                      <MenuItem value={store.storeId} key={store.id}>\n                        {store.title}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Description\"\n                    type=\"text\"\n                    fullWidth\n                    multiline\n                    value={typeDescription}\n                    onChange={(e) => setTypeDescription(e.target.value)}\n                    required\n                  />\n                </FormControl>\n\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch checked={checkedNew} onChange={toggleCheckedNew} />\n                  }\n                  label=\"New Type\"\n                  color=\"primary\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedRestock}\n                      onChange={toggleCheckedRestock}\n                    />\n                  }\n                  label=\"Restock Type\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedPromotion}\n                      onChange={toggleCheckedPromotion}\n                    />\n                  }\n                  label=\"Type in Promotion\"\n                />\n\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    disabled={!checkedPromotion}\n                    type=\"number\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Pourcentage %\"\n                    value={pourcentagePromotion}\n                    onChange={(e) => setPourcentagePromotion(e.target.value)}\n                    required\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Grid container xs={12} justify=\"center\">\n              <Button\n                style={{ borderRadius: 0, width: \"50%\" }}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n                type=\"submit\"\n              >\n                Create Type\n              </Button>\n            </Grid>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\CreateItem.js",["564","565","566","567","568","569","570","571"],"import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addItem } from \"../../redux/actions/itemsActions\";\nimport noProgram from \"../../image/noprogram.gif\";\n\n//components\nimport ItemImageEdit from \"./ItemImageEdit\";\n//mui\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n//icons\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"46%\",\n  },\n  formControl1: {\n    margin: theme.spacing(1),\n    width: \"96%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  itemButton: {\n    marginRight: 20,\n    borderRadius: 0,\n    textTransform: \"none\",\n  },\n}));\n\nexport default function CreateItem(props) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { stores } = useSelector((state) => state);\n  const { types } = useSelector((state) => state);\n\n  const [open, setOpen] = React.useState(false);\n  const [reference, setReference] = React.useState(\"\");\n  const [itemTitle, setItemTitle] = React.useState(\"\");\n  const [Store, setStore] = React.useState(\"\");\n  const [CurrentTypes, setTypes] = React.useState([]);\n  const [Type, setType] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n  const [quantity, setQuantity] = React.useState(0);\n  const [price, setPrice] = React.useState(0);\n\n  const [checkedNew, setCheckedNew] = React.useState(false);\n  const [checkedRestock, setCheckedRestock] = React.useState(false);\n  const [checkedPromotion, setCheckedPromotion] = React.useState(false);\n  const [poucentagePromotion, setPourcentagePromotion] = React.useState(0);\n\n  const [alert, setAlert] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeStore = (e) => {\n    setStore(e.target.value);\n    const CurrentTypes = types.filter((type) => type.store === e.target.value);\n    setTypes(CurrentTypes);\n  };\n\n  const handleChangeType = (e) => {\n    setType(e.target.value);\n  };\n  const toggleCheckedNew = () => {\n    setCheckedNew((prev) => !prev);\n  };\n\n  const toggleCheckedRestock = () => {\n    setCheckedRestock((prev) => !prev);\n  };\n\n  const toggleCheckedPromotion = () => {\n    setCheckedPromotion((prev) => !prev);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (Type === false) {\n      setAlert(true);\n    } else {\n      setOpen(false);\n      setAlert(false);\n      const newItem = {\n        ref: reference,\n        title: itemTitle,\n        description: description,\n        price: parseFloat(price),\n        quantity: parseFloat(quantity),\n        promotion: checkedPromotion,\n        pourcentagePromotion: parseFloat(poucentagePromotion),\n        new: checkedNew,\n        restock: checkedRestock,\n      };\n      dispatch(addItem(Type, newItem));\n      setCheckedNew(false);\n      setCheckedPromotion(false);\n      setDescription(\"\");\n      setType(\"\");\n      setStore(\"\");\n      setReference(\"\");\n      setItemTitle(\"\");\n      setCheckedRestock(false);\n      setPrice(0);\n      setPourcentagePromotion(0);\n      setQuantity(0);\n    }\n  };\n  if (poucentagePromotion < 0) {\n    setPourcentagePromotion(0);\n  }\n  if (quantity < 0) {\n    setQuantity(0);\n  }\n  if (price < 0) {\n    setPrice(0);\n  }\n  return (\n    <div>\n      <Button\n        disableElevation\n        className={classes.itemButton}\n        value=\"1\"\n        color=\"secondary\"\n        variant=\"contained\"\n        onClick={handleClickOpen}\n        // onClick={this.handleClickItems}\n      >\n        create new items\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{ style: { borderRadius: 0 } }}\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"md\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <form onSubmit={handleSubmit}>\n          <Grid container xs={12} justify=\"space-between\">\n            <DialogTitle id=\"form-dialog-title\">Create new Item</DialogTitle>\n            <IconButton\n              aria-label=\"ignore\"\n              style={{ borderRadius: 0 }}\n              onClick={handleClose}\n            >\n              <ClearIcon style={{ fontSize: \"1.6em\" }} />\n            </IconButton>\n          </Grid>\n\n          <Divider />\n          <DialogContent style={{ borderRadius: 0 }}>\n            <Grid container xs={12}>\n              <Grid container xs={6}>\n                <ItemImageEdit itemImages={[noProgram]} />\n              </Grid>\n\n              <Grid container xs={6} style={{ padding: 20 }}>\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Reference\"\n                    type=\"text\"\n                    fullWidth\n                    value={reference}\n                    onChange={(e) => setReference(e.target.value)}\n                    required\n                  />\n                </FormControl>\n\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Item title\"\n                    type=\"text\"\n                    fullWidth\n                    value={itemTitle}\n                    onChange={(e) => setItemTitle(e.target.value)}\n                    required\n                  />\n                </FormControl>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Store\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={Store}\n                    onChange={handleChangeStore}\n                    label=\"Store\"\n                    required\n                  >\n                    {stores.map((store) => (\n                      <MenuItem value={store.title} key={store.id}>\n                        {store.title}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\n                  <Select\n                    disabled={!Store}\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={Type}\n                    onChange={handleChangeType}\n                    label=\"Type\"\n                    required\n                    error={alert}\n                  >\n                    {CurrentTypes.length > 0 ? (\n                      CurrentTypes.map((type) => (\n                        <MenuItem value={type.typeId} key={type.typeId}>\n                          {type.title}\n                        </MenuItem>\n                      ))\n                    ) : (\n                      <MenuItem value={false}>This store has no types</MenuItem>\n                    )}\n                  </Select>\n                </FormControl>\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Description\"\n                    type=\"text\"\n                    fullWidth\n                    multiline\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    required\n                  />\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"number\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Quantity\"\n                    value={quantity}\n                    onChange={(e) => setQuantity(e.target.value)}\n                    required\n                  />\n                </FormControl>\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    variant=\"outlined\"\n                    type=\"number\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Price\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    required\n                  />\n                </FormControl>\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch checked={checkedNew} onChange={toggleCheckedNew} />\n                  }\n                  label=\"New Item\"\n                  color=\"primary\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedRestock}\n                      onChange={toggleCheckedRestock}\n                    />\n                  }\n                  label=\"Restock Item\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedPromotion}\n                      onChange={toggleCheckedPromotion}\n                    />\n                  }\n                  label=\"Item in Promotion\"\n                />\n\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    disabled={!checkedPromotion}\n                    type=\"number\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Pourcentage %\"\n                    value={poucentagePromotion}\n                    onChange={(e) => setPourcentagePromotion(e.target.value)}\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Grid container xs={12} justify=\"center\">\n              <Button\n                type=\"submit\"\n                style={{ borderRadius: 0, width: \"50%\" }}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n              >\n                create item\n              </Button>\n            </Grid>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\EditType.js",["572","573","574","575","576","577","578","579","580","581"],"import React, { useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport noprogram from \"../../image/noprogram.gif\";\n\n//components\nimport ItemImageEdit from \"./ItemImageEdit\";\n//mui\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n//icons\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { editType } from \"../../redux/actions/typesActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"46%\",\n  },\n  formControl1: {\n    margin: theme.spacing(1),\n    width: \"96%\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function EditType(props) {\n  const { stores, ui } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [Store, setStore] = React.useState(\"\");\n  const [reference, setReference] = React.useState(\"\");\n  const [typeTitle, setTypeTitle] = React.useState(\"\");\n  const [typeDescription, setTypeDescription] = React.useState(\"\");\n  const [checkedNew, setCheckedNew] = React.useState(false);\n  const [checkedRestock, setCheckedRestock] = React.useState(false);\n  const [checkedPromotion, setCheckedPromotion] = React.useState(false);\n  const [pourcentagePromotion, setPourcentagePromotion] = React.useState(0);\n\n  useEffect(() => {\n    setReference(props.typeData.ref);\n    setTypeTitle(props.typeData.title);\n    setStore(props.typeData.store);\n    setTypeDescription(props.typeData.description);\n    setCheckedNew(props.typeData.new);\n    setCheckedPromotion(props.typeData.promotion);\n    setCheckedRestock(props.typeData.restock);\n    setPourcentagePromotion(props.typeData.pourcentagePromotion);\n  }, [props.typeData || typeTitle]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeStore = (e) => {\n    setStore(e.target.value);\n  };\n\n  const toggleCheckedNew = () => {\n    setCheckedNew((prev) => !prev);\n  };\n\n  const toggleCheckedRestock = () => {\n    setCheckedRestock((prev) => !prev);\n  };\n\n  const toggleCheckedPromotion = () => {\n    setCheckedPromotion((prev) => !prev);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const editedType = {\n      ref: reference,\n      title: typeTitle,\n      description: typeDescription,\n      promotion: checkedPromotion,\n      pourcentagePromotion: parseFloat(pourcentagePromotion),\n      new: checkedNew,\n      restock: checkedRestock,\n      store: Store,\n    };\n    dispatch(editType(props.typeData.typeId, editedType));\n    if (ui.errors) {\n      alert(\"Please retry later we are having some problem\");\n    } else {\n      setOpen(false);\n      setCheckedNew(false);\n      setCheckedPromotion(false);\n      setTypeDescription(\"\");\n      setReference(\"\");\n      setTypeTitle(\"\");\n      setStore(\"\");\n      setCheckedRestock(false);\n      setPourcentagePromotion(0);\n    }\n  };\n\n  if (pourcentagePromotion < 0) {\n    setPourcentagePromotion(0);\n  }\n  return (\n    <div>\n      <Button\n        startIcon={<EditIcon />}\n        onClick={handleClickOpen}\n        style={\n          props.cellSelected\n            ? {\n                marginRight: 20,\n                borderRadius: 0,\n                backgroundColor: \"#0096c7\",\n                color: \"white\",\n              }\n            : { display: \"none\" }\n        }\n      >\n        edit\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperProps={{ style: { borderRadius: 0 } }}\n        scroll=\"paper\"\n        fullWidth\n        maxWidth=\"md\"\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <form onSubmit={handleSubmit}>\n          <Grid container xs={12} justify=\"space-between\">\n            <DialogTitle id=\"form-dialog-title\">Edit Type Data</DialogTitle>\n            <IconButton\n              aria-label=\"ignore\"\n              style={{ borderRadius: 0 }}\n              onClick={handleClose}\n            >\n              <ClearIcon style={{ fontSize: \"1.6em\" }} />\n            </IconButton>\n          </Grid>\n\n          <Divider />\n          <DialogContent style={{ borderRadius: 0 }}>\n            <Grid container xs={12}>\n              <Grid container xs={6}>\n                <ItemImageEdit itemImages={props.typeData.typeImagesUrl} />\n              </Grid>\n\n              <Grid container xs={6} style={{ padding: 20 }}>\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Reference\"\n                    type=\"text\"\n                    fullWidth\n                    value={reference}\n                    onChange={(e) => setReference(e.target.value)}\n                    required\n                  />\n                </FormControl>\n\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Type title\"\n                    type=\"text\"\n                    fullWidth\n                    value={typeTitle}\n                    onChange={(e) => setTypeTitle(e.target.value)}\n                    required\n                  />\n                </FormControl>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Store\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={Store}\n                    onChange={handleChangeStore}\n                    label=\"Store\"\n                  >\n                    {stores.map((store) => (\n                      <MenuItem value={store.title} key={store.id}>\n                        {store.title}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n\n                <FormControl className={classes.formControl1}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Description\"\n                    type=\"text\"\n                    fullWidth\n                    multiline\n                    value={typeDescription}\n                    onChange={(e) => setTypeDescription(e.target.value)}\n                    required\n                  />\n                </FormControl>\n\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch checked={checkedNew} onChange={toggleCheckedNew} />\n                  }\n                  label=\"New Type\"\n                  color=\"primary\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedRestock}\n                      onChange={toggleCheckedRestock}\n                    />\n                  }\n                  label=\"Restock Type\"\n                />\n                <FormControlLabel\n                  className={classes.formControl}\n                  control={\n                    <Switch\n                      checked={checkedPromotion}\n                      onChange={toggleCheckedPromotion}\n                    />\n                  }\n                  label=\"Type in Promotion\"\n                />\n\n                <FormControl className={classes.formControl}>\n                  <TextField\n                    type=\"number\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Pourcentage %\"\n                    value={pourcentagePromotion}\n                    onChange={(e) => setPourcentagePromotion(e.target.value)}\n                    required\n                    disabled={!checkedPromotion}\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Grid container xs={12} justify=\"center\">\n              <Button\n                type=\"submit\"\n                style={{ borderRadius: 0, width: \"50%\" }}\n                color=\"primary\"\n                variant=\"contained\"\n                size=\"large\"\n              >\n                save changes\n              </Button>\n            </Grid>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\DeleteType.js",["582"],"import React from \"react\";\n\nimport { useDispatch } from \"react-redux\";\n\n//mui\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\n\n//icons\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { deleteType } from \"../../redux/actions/typesActions\";\n\nexport default function DeleteType(props) {\n  const [open, setOpen] = React.useState(false);\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleDelete = () => {\n    dispatch(deleteType(props.typeId));\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        startIcon={<DeleteForeverIcon />}\n        onClick={handleClickOpen}\n        style={\n          props.cellSelected\n            ? {\n                marginRight: 20,\n                borderRadius: 0,\n                backgroundColor: \"#e01e37\",\n                color: \"white\",\n              }\n            : { display: \"none\" }\n        }\n      >\n        delete\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle id=\"draggable-dialog-title\">Delete Type</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n            if you delete the type you cant bring it back latter. are you sur\n            you want to delete this type ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleDelete}\n            variant=\"contained\"\n            style={{\n              borderRadius: 0,\n              backgroundColor: \"#e63946\",\n              color: \"white\",\n            }}\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\CommandTab.js",["583","584","585","586","587","588","589","590","591","592","593","594"],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\AccepteCommand.js",["595","596"],"C:\\Users\\TRETEC\\Desktop\\New folder\\project\\src\\component\\admin\\RefuseCommand.js",["597"],{"ruleId":"598","severity":1,"message":"599","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":23},{"ruleId":"602","replacedBy":"603"},{"ruleId":"604","replacedBy":"605"},{"ruleId":"598","severity":1,"message":"606","line":29,"column":8,"nodeType":"600","messageId":"601","endLine":29,"endColumn":23},{"ruleId":"598","severity":1,"message":"607","line":33,"column":8,"nodeType":"600","messageId":"601","endLine":33,"endColumn":14},{"ruleId":"598","severity":1,"message":"608","line":43,"column":8,"nodeType":"600","messageId":"601","endLine":43,"endColumn":14},{"ruleId":"598","severity":1,"message":"609","line":50,"column":8,"nodeType":"600","messageId":"601","endLine":50,"endColumn":13},{"ruleId":"598","severity":1,"message":"610","line":51,"column":10,"nodeType":"600","messageId":"601","endLine":51,"endColumn":22},{"ruleId":"598","severity":1,"message":"611","line":51,"column":24,"nodeType":"600","messageId":"601","endLine":51,"endColumn":37},{"ruleId":"598","severity":1,"message":"612","line":51,"column":39,"nodeType":"600","messageId":"601","endLine":51,"endColumn":54},{"ruleId":"598","severity":1,"message":"613","line":52,"column":8,"nodeType":"600","messageId":"601","endLine":52,"endColumn":16},{"ruleId":"598","severity":1,"message":"614","line":53,"column":8,"nodeType":"600","messageId":"601","endLine":53,"endColumn":15},{"ruleId":"615","severity":1,"message":"616","line":79,"column":6,"nodeType":"617","endLine":79,"endColumn":16,"suggestions":"618"},{"ruleId":"619","severity":1,"message":"620","line":1,"column":1,"nodeType":"621","endLine":57,"endColumn":3},{"ruleId":"598","severity":1,"message":"622","line":102,"column":9,"nodeType":"600","messageId":"601","endLine":102,"endColumn":15},{"ruleId":"598","severity":1,"message":"623","line":3,"column":10,"nodeType":"600","messageId":"601","endLine":3,"endColumn":14},{"ruleId":"598","severity":1,"message":"624","line":15,"column":10,"nodeType":"600","messageId":"601","endLine":15,"endColumn":16},{"ruleId":"598","severity":1,"message":"625","line":15,"column":18,"nodeType":"600","messageId":"601","endLine":15,"endColumn":29},{"ruleId":"626","severity":1,"message":"627","line":45,"column":11,"nodeType":"628","endLine":49,"endColumn":12},{"ruleId":"629","severity":1,"message":"630","line":74,"column":29,"nodeType":"631","messageId":"632","endLine":74,"endColumn":31},{"ruleId":"633","severity":1,"message":"634","line":94,"column":22,"nodeType":"635","messageId":"636","endLine":94,"endColumn":24},{"ruleId":"629","severity":1,"message":"637","line":95,"column":22,"nodeType":"631","messageId":"632","endLine":95,"endColumn":24},{"ruleId":"598","severity":1,"message":"638","line":19,"column":7,"nodeType":"600","messageId":"601","endLine":19,"endColumn":22},{"ruleId":"615","severity":1,"message":"639","line":29,"column":6,"nodeType":"617","endLine":29,"endColumn":8,"suggestions":"640"},{"ruleId":"598","severity":1,"message":"641","line":88,"column":21,"nodeType":"600","messageId":"601","endLine":88,"endColumn":30},{"ruleId":"633","severity":1,"message":"642","line":52,"column":27,"nodeType":"635","messageId":"643","endLine":52,"endColumn":29},{"ruleId":"633","severity":1,"message":"642","line":70,"column":19,"nodeType":"635","messageId":"643","endLine":70,"endColumn":21},{"ruleId":"629","severity":1,"message":"630","line":78,"column":17,"nodeType":"631","messageId":"632","endLine":78,"endColumn":19},{"ruleId":"598","severity":1,"message":"644","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":22},{"ruleId":"633","severity":1,"message":"634","line":61,"column":43,"nodeType":"635","messageId":"636","endLine":61,"endColumn":45},{"ruleId":"629","severity":1,"message":"637","line":62,"column":37,"nodeType":"631","messageId":"632","endLine":62,"endColumn":39},{"ruleId":"645","severity":1,"message":"646","line":66,"column":56,"nodeType":"647","endLine":66,"endColumn":80},{"ruleId":"648","severity":1,"message":"649","line":69,"column":11,"nodeType":"628","endLine":76,"endColumn":13},{"ruleId":"598","severity":1,"message":"650","line":10,"column":8,"nodeType":"600","messageId":"601","endLine":10,"endColumn":12},{"ruleId":"651","severity":1,"message":"652","line":27,"column":5,"nodeType":"653","messageId":"632","endLine":27,"endColumn":11},{"ruleId":"629","severity":1,"message":"637","line":153,"column":21,"nodeType":"631","messageId":"632","endLine":153,"endColumn":23},{"ruleId":"598","severity":1,"message":"654","line":4,"column":10,"nodeType":"600","messageId":"601","endLine":4,"endColumn":17},{"ruleId":"598","severity":1,"message":"655","line":15,"column":8,"nodeType":"600","messageId":"601","endLine":15,"endColumn":22},{"ruleId":"598","severity":1,"message":"656","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":22},{"ruleId":"657","severity":1,"message":"658","line":126,"column":7,"nodeType":"659","endLine":126,"endColumn":17},{"ruleId":"657","severity":1,"message":"658","line":129,"column":7,"nodeType":"659","endLine":129,"endColumn":17},{"ruleId":"657","severity":1,"message":"658","line":132,"column":7,"nodeType":"659","endLine":132,"endColumn":17},{"ruleId":"633","severity":1,"message":"634","line":136,"column":38,"nodeType":"635","messageId":"636","endLine":136,"endColumn":40},{"ruleId":"633","severity":1,"message":"634","line":157,"column":38,"nodeType":"635","messageId":"636","endLine":157,"endColumn":40},{"ruleId":"633","severity":1,"message":"634","line":38,"column":43,"nodeType":"635","messageId":"636","endLine":38,"endColumn":45},{"ruleId":"629","severity":1,"message":"637","line":39,"column":37,"nodeType":"631","messageId":"632","endLine":39,"endColumn":39},{"ruleId":"598","severity":1,"message":"660","line":7,"column":3,"nodeType":"600","messageId":"601","endLine":7,"endColumn":20},{"ruleId":"598","severity":1,"message":"661","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":12},{"ruleId":"598","severity":1,"message":"662","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":17},{"ruleId":"598","severity":1,"message":"663","line":11,"column":8,"nodeType":"600","messageId":"601","endLine":11,"endColumn":15},{"ruleId":"598","severity":1,"message":"661","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":14,"column":8,"nodeType":"600","messageId":"601","endLine":14,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":15,"column":8,"nodeType":"600","messageId":"601","endLine":15,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":16,"column":8,"nodeType":"600","messageId":"601","endLine":16,"endColumn":18},{"ruleId":"598","severity":1,"message":"624","line":17,"column":8,"nodeType":"600","messageId":"601","endLine":17,"endColumn":14},{"ruleId":"598","severity":1,"message":"666","line":20,"column":8,"nodeType":"600","messageId":"601","endLine":20,"endColumn":16},{"ruleId":"598","severity":1,"message":"667","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":17},{"ruleId":"598","severity":1,"message":"668","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":17},{"ruleId":"598","severity":1,"message":"669","line":23,"column":8,"nodeType":"600","messageId":"601","endLine":23,"endColumn":21},{"ruleId":"598","severity":1,"message":"670","line":65,"column":13,"nodeType":"600","messageId":"601","endLine":65,"endColumn":20},{"ruleId":"598","severity":1,"message":"671","line":65,"column":22,"nodeType":"600","messageId":"601","endLine":65,"endColumn":27},{"ruleId":"598","severity":1,"message":"638","line":31,"column":7,"nodeType":"600","messageId":"601","endLine":31,"endColumn":22},{"ruleId":"598","severity":1,"message":"672","line":3,"column":3,"nodeType":"600","messageId":"601","endLine":3,"endColumn":18},{"ruleId":"598","severity":1,"message":"673","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":20},{"ruleId":"598","severity":1,"message":"674","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":21},{"ruleId":"598","severity":1,"message":"675","line":23,"column":8,"nodeType":"600","messageId":"601","endLine":23,"endColumn":22},{"ruleId":"598","severity":1,"message":"676","line":24,"column":8,"nodeType":"600","messageId":"601","endLine":24,"endColumn":22},{"ruleId":"598","severity":1,"message":"655","line":25,"column":8,"nodeType":"600","messageId":"601","endLine":25,"endColumn":22},{"ruleId":"598","severity":1,"message":"677","line":27,"column":8,"nodeType":"600","messageId":"601","endLine":27,"endColumn":18},{"ruleId":"598","severity":1,"message":"678","line":29,"column":8,"nodeType":"600","messageId":"601","endLine":29,"endColumn":18},{"ruleId":"598","severity":1,"message":"679","line":30,"column":8,"nodeType":"600","messageId":"601","endLine":30,"endColumn":16},{"ruleId":"598","severity":1,"message":"656","line":31,"column":8,"nodeType":"600","messageId":"601","endLine":31,"endColumn":22},{"ruleId":"598","severity":1,"message":"680","line":32,"column":8,"nodeType":"600","messageId":"601","endLine":32,"endColumn":19},{"ruleId":"598","severity":1,"message":"681","line":33,"column":8,"nodeType":"600","messageId":"601","endLine":33,"endColumn":14},{"ruleId":"598","severity":1,"message":"682","line":5,"column":10,"nodeType":"600","messageId":"601","endLine":5,"endColumn":14},{"ruleId":"598","severity":1,"message":"683","line":6,"column":10,"nodeType":"600","messageId":"601","endLine":6,"endColumn":29},{"ruleId":"598","severity":1,"message":"684","line":7,"column":10,"nodeType":"600","messageId":"601","endLine":7,"endColumn":33},{"ruleId":"598","severity":1,"message":"685","line":8,"column":8,"nodeType":"600","messageId":"601","endLine":8,"endColumn":22},{"ruleId":"598","severity":1,"message":"650","line":10,"column":8,"nodeType":"600","messageId":"601","endLine":10,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":19},{"ruleId":"598","severity":1,"message":"624","line":16,"column":10,"nodeType":"600","messageId":"601","endLine":16,"endColumn":16},{"ruleId":"598","severity":1,"message":"686","line":17,"column":10,"nodeType":"600","messageId":"601","endLine":17,"endColumn":15},{"ruleId":"651","severity":1,"message":"652","line":27,"column":5,"nodeType":"653","messageId":"632","endLine":27,"endColumn":11},{"ruleId":"598","severity":1,"message":"687","line":101,"column":11,"nodeType":"600","messageId":"601","endLine":101,"endColumn":15},{"ruleId":"598","severity":1,"message":"688","line":9,"column":8,"nodeType":"600","messageId":"601","endLine":9,"endColumn":19},{"ruleId":"651","severity":1,"message":"652","line":27,"column":5,"nodeType":"653","messageId":"632","endLine":27,"endColumn":11},{"ruleId":"629","severity":1,"message":"637","line":145,"column":19,"nodeType":"631","messageId":"632","endLine":145,"endColumn":21},{"ruleId":"598","severity":1,"message":"689","line":15,"column":8,"nodeType":"600","messageId":"601","endLine":15,"endColumn":13},{"ruleId":"598","severity":1,"message":"690","line":18,"column":8,"nodeType":"600","messageId":"601","endLine":18,"endColumn":24},{"ruleId":"598","severity":1,"message":"691","line":19,"column":8,"nodeType":"600","messageId":"601","endLine":19,"endColumn":34},{"ruleId":"598","severity":1,"message":"677","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":18},{"ruleId":"598","severity":1,"message":"692","line":93,"column":22,"nodeType":"600","messageId":"601","endLine":93,"endColumn":28},{"ruleId":"598","severity":1,"message":"693","line":93,"column":30,"nodeType":"600","messageId":"601","endLine":93,"endColumn":35},{"ruleId":"598","severity":1,"message":"694","line":93,"column":37,"nodeType":"600","messageId":"601","endLine":93,"endColumn":50},{"ruleId":"598","severity":1,"message":"695","line":93,"column":52,"nodeType":"600","messageId":"601","endLine":93,"endColumn":56},{"ruleId":"598","severity":1,"message":"696","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":17},{"ruleId":"598","severity":1,"message":"662","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":17},{"ruleId":"598","severity":1,"message":"661","line":19,"column":8,"nodeType":"600","messageId":"601","endLine":19,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":20,"column":8,"nodeType":"600","messageId":"601","endLine":20,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":18},{"ruleId":"598","severity":1,"message":"666","line":34,"column":8,"nodeType":"600","messageId":"601","endLine":34,"endColumn":16},{"ruleId":"598","severity":1,"message":"667","line":35,"column":8,"nodeType":"600","messageId":"601","endLine":35,"endColumn":17},{"ruleId":"598","severity":1,"message":"668","line":36,"column":8,"nodeType":"600","messageId":"601","endLine":36,"endColumn":17},{"ruleId":"598","severity":1,"message":"669","line":37,"column":8,"nodeType":"600","messageId":"601","endLine":37,"endColumn":21},{"ruleId":"697","severity":1,"message":"698","line":126,"column":3,"nodeType":"699","messageId":"632","endLine":128,"endColumn":4},{"ruleId":"598","severity":1,"message":"671","line":159,"column":22,"nodeType":"600","messageId":"601","endLine":159,"endColumn":27},{"ruleId":"629","severity":1,"message":"637","line":190,"column":38,"nodeType":"631","messageId":"632","endLine":190,"endColumn":40},{"ruleId":"629","severity":1,"message":"637","line":196,"column":43,"nodeType":"631","messageId":"632","endLine":196,"endColumn":45},{"ruleId":"629","severity":1,"message":"637","line":197,"column":45,"nodeType":"631","messageId":"632","endLine":197,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":203,"column":40,"nodeType":"631","messageId":"632","endLine":203,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":212,"column":38,"nodeType":"631","messageId":"632","endLine":212,"endColumn":40},{"ruleId":"629","severity":1,"message":"637","line":218,"column":43,"nodeType":"631","messageId":"632","endLine":218,"endColumn":45},{"ruleId":"629","severity":1,"message":"637","line":219,"column":45,"nodeType":"631","messageId":"632","endLine":219,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":225,"column":40,"nodeType":"631","messageId":"632","endLine":225,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":234,"column":38,"nodeType":"631","messageId":"632","endLine":234,"endColumn":40},{"ruleId":"629","severity":1,"message":"637","line":240,"column":43,"nodeType":"631","messageId":"632","endLine":240,"endColumn":45},{"ruleId":"629","severity":1,"message":"637","line":241,"column":45,"nodeType":"631","messageId":"632","endLine":241,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":247,"column":40,"nodeType":"631","messageId":"632","endLine":247,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":257,"column":38,"nodeType":"631","messageId":"632","endLine":257,"endColumn":40},{"ruleId":"629","severity":1,"message":"637","line":263,"column":43,"nodeType":"631","messageId":"632","endLine":263,"endColumn":45},{"ruleId":"629","severity":1,"message":"637","line":264,"column":45,"nodeType":"631","messageId":"632","endLine":264,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":270,"column":40,"nodeType":"631","messageId":"632","endLine":270,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":281,"column":40,"nodeType":"631","messageId":"632","endLine":281,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":287,"column":45,"nodeType":"631","messageId":"632","endLine":287,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":288,"column":47,"nodeType":"631","messageId":"632","endLine":288,"endColumn":49},{"ruleId":"629","severity":1,"message":"637","line":294,"column":42,"nodeType":"631","messageId":"632","endLine":294,"endColumn":44},{"ruleId":"629","severity":1,"message":"637","line":305,"column":47,"nodeType":"631","messageId":"632","endLine":305,"endColumn":49},{"ruleId":"629","severity":1,"message":"637","line":311,"column":42,"nodeType":"631","messageId":"632","endLine":311,"endColumn":44},{"ruleId":"629","severity":1,"message":"637","line":329,"column":45,"nodeType":"631","messageId":"632","endLine":329,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":335,"column":40,"nodeType":"631","messageId":"632","endLine":335,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":345,"column":45,"nodeType":"631","messageId":"632","endLine":345,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":351,"column":40,"nodeType":"631","messageId":"632","endLine":351,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":361,"column":45,"nodeType":"631","messageId":"632","endLine":361,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":367,"column":40,"nodeType":"631","messageId":"632","endLine":367,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":378,"column":45,"nodeType":"631","messageId":"632","endLine":378,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":384,"column":40,"nodeType":"631","messageId":"632","endLine":384,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":395,"column":45,"nodeType":"631","messageId":"632","endLine":395,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":401,"column":40,"nodeType":"631","messageId":"632","endLine":401,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":411,"column":45,"nodeType":"631","messageId":"632","endLine":411,"endColumn":47},{"ruleId":"629","severity":1,"message":"637","line":417,"column":40,"nodeType":"631","messageId":"632","endLine":417,"endColumn":42},{"ruleId":"629","severity":1,"message":"637","line":428,"column":35,"nodeType":"631","messageId":"632","endLine":428,"endColumn":37},{"ruleId":"629","severity":1,"message":"637","line":429,"column":35,"nodeType":"631","messageId":"632","endLine":429,"endColumn":37},{"ruleId":"629","severity":1,"message":"637","line":430,"column":35,"nodeType":"631","messageId":"632","endLine":430,"endColumn":37},{"ruleId":"629","severity":1,"message":"637","line":431,"column":35,"nodeType":"631","messageId":"632","endLine":431,"endColumn":37},{"ruleId":"629","severity":1,"message":"637","line":432,"column":35,"nodeType":"631","messageId":"632","endLine":432,"endColumn":37},{"ruleId":"629","severity":1,"message":"637","line":433,"column":35,"nodeType":"631","messageId":"632","endLine":433,"endColumn":37},{"ruleId":"598","severity":1,"message":"696","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":17},{"ruleId":"598","severity":1,"message":"662","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":17},{"ruleId":"598","severity":1,"message":"663","line":11,"column":8,"nodeType":"600","messageId":"601","endLine":11,"endColumn":15},{"ruleId":"598","severity":1,"message":"661","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":14,"column":8,"nodeType":"600","messageId":"601","endLine":14,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":15,"column":8,"nodeType":"600","messageId":"601","endLine":15,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":16,"column":8,"nodeType":"600","messageId":"601","endLine":16,"endColumn":18},{"ruleId":"598","severity":1,"message":"624","line":17,"column":8,"nodeType":"600","messageId":"601","endLine":17,"endColumn":14},{"ruleId":"598","severity":1,"message":"666","line":20,"column":8,"nodeType":"600","messageId":"601","endLine":20,"endColumn":16},{"ruleId":"598","severity":1,"message":"667","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":17},{"ruleId":"598","severity":1,"message":"668","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":17},{"ruleId":"598","severity":1,"message":"669","line":23,"column":8,"nodeType":"600","messageId":"601","endLine":23,"endColumn":21},{"ruleId":"697","severity":1,"message":"698","line":38,"column":3,"nodeType":"699","messageId":"632","endLine":40,"endColumn":4},{"ruleId":"598","severity":1,"message":"670","line":65,"column":13,"nodeType":"600","messageId":"601","endLine":65,"endColumn":20},{"ruleId":"598","severity":1,"message":"671","line":65,"column":22,"nodeType":"600","messageId":"601","endLine":65,"endColumn":27},{"ruleId":"598","severity":1,"message":"696","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":17},{"ruleId":"598","severity":1,"message":"662","line":7,"column":8,"nodeType":"600","messageId":"601","endLine":7,"endColumn":17},{"ruleId":"598","severity":1,"message":"663","line":11,"column":8,"nodeType":"600","messageId":"601","endLine":11,"endColumn":15},{"ruleId":"598","severity":1,"message":"661","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":14,"column":8,"nodeType":"600","messageId":"601","endLine":14,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":15,"column":8,"nodeType":"600","messageId":"601","endLine":15,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":16,"column":8,"nodeType":"600","messageId":"601","endLine":16,"endColumn":18},{"ruleId":"598","severity":1,"message":"624","line":17,"column":8,"nodeType":"600","messageId":"601","endLine":17,"endColumn":14},{"ruleId":"598","severity":1,"message":"666","line":20,"column":8,"nodeType":"600","messageId":"601","endLine":20,"endColumn":16},{"ruleId":"598","severity":1,"message":"667","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":17},{"ruleId":"598","severity":1,"message":"668","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":17},{"ruleId":"598","severity":1,"message":"669","line":23,"column":8,"nodeType":"600","messageId":"601","endLine":23,"endColumn":21},{"ruleId":"697","severity":1,"message":"698","line":38,"column":3,"nodeType":"699","messageId":"632","endLine":40,"endColumn":4},{"ruleId":"598","severity":1,"message":"670","line":65,"column":13,"nodeType":"600","messageId":"601","endLine":65,"endColumn":20},{"ruleId":"598","severity":1,"message":"671","line":65,"column":22,"nodeType":"600","messageId":"601","endLine":65,"endColumn":27},{"ruleId":"598","severity":1,"message":"696","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":17},{"ruleId":"598","severity":1,"message":"677","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":18},{"ruleId":"598","severity":1,"message":"661","line":17,"column":8,"nodeType":"600","messageId":"601","endLine":17,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":18,"column":8,"nodeType":"600","messageId":"601","endLine":18,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":19,"column":8,"nodeType":"600","messageId":"601","endLine":19,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":20,"column":8,"nodeType":"600","messageId":"601","endLine":20,"endColumn":18},{"ruleId":"598","severity":1,"message":"624","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":14},{"ruleId":"598","severity":1,"message":"700","line":23,"column":8,"nodeType":"600","messageId":"601","endLine":23,"endColumn":16},{"ruleId":"598","severity":1,"message":"701","line":24,"column":8,"nodeType":"600","messageId":"601","endLine":24,"endColumn":25},{"ruleId":"598","severity":1,"message":"670","line":47,"column":13,"nodeType":"600","messageId":"601","endLine":47,"endColumn":20},{"ruleId":"598","severity":1,"message":"696","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":17},{"ruleId":"598","severity":1,"message":"677","line":12,"column":8,"nodeType":"600","messageId":"601","endLine":12,"endColumn":18},{"ruleId":"598","severity":1,"message":"661","line":16,"column":8,"nodeType":"600","messageId":"601","endLine":16,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":17,"column":8,"nodeType":"600","messageId":"601","endLine":17,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":18,"column":8,"nodeType":"600","messageId":"601","endLine":18,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":19,"column":8,"nodeType":"600","messageId":"601","endLine":19,"endColumn":18},{"ruleId":"598","severity":1,"message":"624","line":20,"column":8,"nodeType":"600","messageId":"601","endLine":20,"endColumn":14},{"ruleId":"598","severity":1,"message":"700","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":16},{"ruleId":"598","severity":1,"message":"701","line":23,"column":8,"nodeType":"600","messageId":"601","endLine":23,"endColumn":25},{"ruleId":"598","severity":1,"message":"670","line":48,"column":13,"nodeType":"600","messageId":"601","endLine":48,"endColumn":20},{"ruleId":"598","severity":1,"message":"696","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":17},{"ruleId":"598","severity":1,"message":"677","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":18},{"ruleId":"598","severity":1,"message":"661","line":17,"column":8,"nodeType":"600","messageId":"601","endLine":17,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":18,"column":8,"nodeType":"600","messageId":"601","endLine":18,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":19,"column":8,"nodeType":"600","messageId":"601","endLine":19,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":20,"column":8,"nodeType":"600","messageId":"601","endLine":20,"endColumn":18},{"ruleId":"598","severity":1,"message":"624","line":21,"column":8,"nodeType":"600","messageId":"601","endLine":21,"endColumn":14},{"ruleId":"598","severity":1,"message":"670","line":44,"column":13,"nodeType":"600","messageId":"601","endLine":44,"endColumn":20},{"ruleId":"598","severity":1,"message":"656","line":14,"column":8,"nodeType":"600","messageId":"601","endLine":14,"endColumn":22},{"ruleId":"598","severity":1,"message":"702","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":25},{"ruleId":"598","severity":1,"message":"661","line":27,"column":8,"nodeType":"600","messageId":"601","endLine":27,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":28,"column":8,"nodeType":"600","messageId":"601","endLine":28,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":29,"column":8,"nodeType":"600","messageId":"601","endLine":29,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":30,"column":8,"nodeType":"600","messageId":"601","endLine":30,"endColumn":18},{"ruleId":"598","severity":1,"message":"703","line":33,"column":8,"nodeType":"600","messageId":"601","endLine":33,"endColumn":21},{"ruleId":"615","severity":1,"message":"704","line":85,"column":6,"nodeType":"617","endLine":85,"endColumn":22,"suggestions":"705"},{"ruleId":"598","severity":1,"message":"650","line":11,"column":8,"nodeType":"600","messageId":"601","endLine":11,"endColumn":12},{"ruleId":"598","severity":1,"message":"665","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":18},{"ruleId":"648","severity":1,"message":"649","line":144,"column":15,"nodeType":"628","endLine":144,"endColumn":81},{"ruleId":"598","severity":1,"message":"706","line":10,"column":8,"nodeType":"600","messageId":"601","endLine":10,"endColumn":13},{"ruleId":"598","severity":1,"message":"678","line":12,"column":8,"nodeType":"600","messageId":"601","endLine":12,"endColumn":18},{"ruleId":"598","severity":1,"message":"679","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":16},{"ruleId":"598","severity":1,"message":"656","line":14,"column":8,"nodeType":"600","messageId":"601","endLine":14,"endColumn":22},{"ruleId":"598","severity":1,"message":"681","line":16,"column":8,"nodeType":"600","messageId":"601","endLine":16,"endColumn":14},{"ruleId":"598","severity":1,"message":"702","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":25},{"ruleId":"598","severity":1,"message":"661","line":27,"column":8,"nodeType":"600","messageId":"601","endLine":27,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":28,"column":8,"nodeType":"600","messageId":"601","endLine":28,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":29,"column":8,"nodeType":"600","messageId":"601","endLine":29,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":30,"column":8,"nodeType":"600","messageId":"601","endLine":30,"endColumn":18},{"ruleId":"598","severity":1,"message":"700","line":32,"column":8,"nodeType":"600","messageId":"601","endLine":32,"endColumn":16},{"ruleId":"598","severity":1,"message":"703","line":33,"column":8,"nodeType":"600","messageId":"601","endLine":33,"endColumn":21},{"ruleId":"598","severity":1,"message":"706","line":12,"column":8,"nodeType":"600","messageId":"601","endLine":12,"endColumn":13},{"ruleId":"598","severity":1,"message":"678","line":12,"column":8,"nodeType":"600","messageId":"601","endLine":12,"endColumn":18},{"ruleId":"598","severity":1,"message":"679","line":13,"column":8,"nodeType":"600","messageId":"601","endLine":13,"endColumn":16},{"ruleId":"598","severity":1,"message":"656","line":14,"column":8,"nodeType":"600","messageId":"601","endLine":14,"endColumn":22},{"ruleId":"598","severity":1,"message":"681","line":16,"column":8,"nodeType":"600","messageId":"601","endLine":16,"endColumn":14},{"ruleId":"598","severity":1,"message":"702","line":22,"column":8,"nodeType":"600","messageId":"601","endLine":22,"endColumn":25},{"ruleId":"598","severity":1,"message":"661","line":27,"column":8,"nodeType":"600","messageId":"601","endLine":27,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":28,"column":8,"nodeType":"600","messageId":"601","endLine":28,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":29,"column":8,"nodeType":"600","messageId":"601","endLine":29,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":30,"column":8,"nodeType":"600","messageId":"601","endLine":30,"endColumn":18},{"ruleId":"598","severity":1,"message":"703","line":33,"column":8,"nodeType":"600","messageId":"601","endLine":33,"endColumn":21},{"ruleId":"598","severity":1,"message":"656","line":17,"column":8,"nodeType":"600","messageId":"601","endLine":17,"endColumn":22},{"ruleId":"598","severity":1,"message":"702","line":25,"column":8,"nodeType":"600","messageId":"601","endLine":25,"endColumn":25},{"ruleId":"598","severity":1,"message":"661","line":30,"column":8,"nodeType":"600","messageId":"601","endLine":30,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":31,"column":8,"nodeType":"600","messageId":"601","endLine":31,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":32,"column":8,"nodeType":"600","messageId":"601","endLine":32,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":33,"column":8,"nodeType":"600","messageId":"601","endLine":33,"endColumn":18},{"ruleId":"598","severity":1,"message":"700","line":35,"column":8,"nodeType":"600","messageId":"601","endLine":35,"endColumn":16},{"ruleId":"598","severity":1,"message":"703","line":36,"column":8,"nodeType":"600","messageId":"601","endLine":36,"endColumn":21},{"ruleId":"598","severity":1,"message":"656","line":18,"column":8,"nodeType":"600","messageId":"601","endLine":18,"endColumn":22},{"ruleId":"598","severity":1,"message":"702","line":26,"column":8,"nodeType":"600","messageId":"601","endLine":26,"endColumn":25},{"ruleId":"598","severity":1,"message":"661","line":31,"column":8,"nodeType":"600","messageId":"601","endLine":31,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":32,"column":8,"nodeType":"600","messageId":"601","endLine":32,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":33,"column":8,"nodeType":"600","messageId":"601","endLine":33,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":34,"column":8,"nodeType":"600","messageId":"601","endLine":34,"endColumn":18},{"ruleId":"598","severity":1,"message":"700","line":36,"column":8,"nodeType":"600","messageId":"601","endLine":36,"endColumn":16},{"ruleId":"598","severity":1,"message":"703","line":37,"column":8,"nodeType":"600","messageId":"601","endLine":37,"endColumn":21},{"ruleId":"598","severity":1,"message":"662","line":4,"column":8,"nodeType":"600","messageId":"601","endLine":4,"endColumn":17},{"ruleId":"598","severity":1,"message":"656","line":15,"column":8,"nodeType":"600","messageId":"601","endLine":15,"endColumn":22},{"ruleId":"598","severity":1,"message":"702","line":23,"column":8,"nodeType":"600","messageId":"601","endLine":23,"endColumn":25},{"ruleId":"598","severity":1,"message":"661","line":28,"column":8,"nodeType":"600","messageId":"601","endLine":28,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":29,"column":8,"nodeType":"600","messageId":"601","endLine":29,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":30,"column":8,"nodeType":"600","messageId":"601","endLine":30,"endColumn":17},{"ruleId":"598","severity":1,"message":"665","line":31,"column":8,"nodeType":"600","messageId":"601","endLine":31,"endColumn":18},{"ruleId":"598","severity":1,"message":"703","line":34,"column":8,"nodeType":"600","messageId":"601","endLine":34,"endColumn":21},{"ruleId":"615","severity":1,"message":"707","line":78,"column":6,"nodeType":"617","endLine":78,"endColumn":35,"suggestions":"708"},{"ruleId":"615","severity":1,"message":"709","line":78,"column":7,"nodeType":"710","endLine":78,"endColumn":34},{"ruleId":"598","severity":1,"message":"706","line":12,"column":8,"nodeType":"600","messageId":"601","endLine":12,"endColumn":13},{"ruleId":"598","severity":1,"message":"696","line":5,"column":8,"nodeType":"600","messageId":"601","endLine":5,"endColumn":17},{"ruleId":"598","severity":1,"message":"661","line":15,"column":8,"nodeType":"600","messageId":"601","endLine":15,"endColumn":12},{"ruleId":"598","severity":1,"message":"625","line":16,"column":8,"nodeType":"600","messageId":"601","endLine":16,"endColumn":19},{"ruleId":"598","severity":1,"message":"664","line":17,"column":8,"nodeType":"600","messageId":"601","endLine":17,"endColumn":17},{"ruleId":"598","severity":1,"message":"711","line":26,"column":7,"nodeType":"600","messageId":"601","endLine":26,"endColumn":15},{"ruleId":"657","severity":1,"message":"658","line":104,"column":5,"nodeType":"659","endLine":104,"endColumn":15},{"ruleId":"629","severity":1,"message":"637","line":114,"column":46,"nodeType":"631","messageId":"632","endLine":114,"endColumn":48},{"ruleId":"629","severity":1,"message":"637","line":115,"column":48,"nodeType":"631","messageId":"632","endLine":115,"endColumn":50},{"ruleId":"629","severity":1,"message":"637","line":123,"column":46,"nodeType":"631","messageId":"632","endLine":123,"endColumn":48},{"ruleId":"629","severity":1,"message":"637","line":124,"column":48,"nodeType":"631","messageId":"632","endLine":124,"endColumn":50},{"ruleId":"629","severity":1,"message":"637","line":146,"column":36,"nodeType":"631","messageId":"632","endLine":146,"endColumn":38},{"ruleId":"629","severity":1,"message":"637","line":235,"column":36,"nodeType":"631","messageId":"632","endLine":235,"endColumn":38},{"ruleId":"598","severity":1,"message":"706","line":10,"column":8,"nodeType":"600","messageId":"601","endLine":10,"endColumn":13},{"ruleId":"598","severity":1,"message":"712","line":16,"column":10,"nodeType":"600","messageId":"601","endLine":16,"endColumn":21},{"ruleId":"598","severity":1,"message":"706","line":10,"column":8,"nodeType":"600","messageId":"601","endLine":10,"endColumn":13},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["713"],"no-negated-in-lhs",["714"],"'ScrollebarAdmin' is defined but never used.","'Footer' is defined but never used.","'random' is defined but never used.","'admin' is defined but never used.","'CLEAR_ERRORS' is defined but never used.","'SET_ADMIN_NAV' is defined but never used.","'UNSET_ADMIN_NAV' is defined but never used.","'commands' is defined but never used.","'website' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["715"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'signed' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'CardContent' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '===' and instead saw '=='.","'mapStateToProps' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["716"],"'condition' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'ExpandMoreIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Grid' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","'connect' is defined but never used.","'ViewAgendaIcon' is defined but never used.","'FormHelperText' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'SET_AUTHONTICATED' is defined but never used.","'Card' is defined but never used.","'noprogram' is defined but never used.","'Divider' is defined but never used.","'CardMedia' is defined but never used.","'Typography' is defined but never used.","'RoomIcon' is defined but never used.","'PhoneIcon' is defined but never used.","'EmailIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'classes' is assigned a value but never used.","'admin' is assigned a value but never used.","'DELETE_COMMANDS' is defined but never used.","'ViewListIcon' is defined but never used.","'ViewComfyIcon' is defined but never used.","'ViewColumnIcon' is defined but never used.","'ViewStreamIcon' is defined but never used.","'IconButton' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'Info' is defined but never used.","'useGalaxyInfoStyles' is defined but never used.","'useCoverCardMediaStyles' is defined but never used.","'CardActionArea' is defined but never used.","'Alert' is defined but never used.","'type' is assigned a value but never used.","'CardActions' is defined but never used.","'Badge' is defined but never used.","'PermIdentityIcon' is defined but never used.","'ShoppingBasketOutlinedIcon' is defined but never used.","'stores' is assigned a value but never used.","'types' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'cart' is assigned a value but never used.","'PropTypes' is defined but never used.","no-dupe-class-members","Duplicate name 'componentDidMount'.","MethodDefinition","'EditIcon' is defined but never used.","'DeleteForeverIcon' is defined but never used.","'DialogContentText' is defined but never used.","'AddAPhotoIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'types'. Either include it or remove the dependency array.",["717"],"'Paper' is defined but never used.","React Hook useEffect has missing dependencies: 'props.typeData.description', 'props.typeData.new', 'props.typeData.pourcentagePromotion', 'props.typeData.promotion', 'props.typeData.ref', 'props.typeData.restock', 'props.typeData.store', and 'props.typeData.title'. Either include them or remove the dependency array. If 'setReference' needs the current value of 'props.typeData.ref', you can also switch to useReducer instead of useState and read 'props.typeData.ref' in the reducer.",["718"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'rowsItem' is assigned a value but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},"Update the dependencies array to be: [dispatch, history]",{"range":"727","text":"728"},"Update the dependencies array to be: [dispatch]",{"range":"729","text":"730"},"Update the dependencies array to be: [props.itemData, types]",{"range":"731","text":"732"},"Update the dependencies array to be: [props.typeData.description, props.typeData.new, props.typeData.pourcentagePromotion, props.typeData.promotion, props.typeData.ref, props.typeData.restock, props.typeData.store, props.typeData.title]",{"range":"733","text":"734"},[2216,2226],"[dispatch, history]",[576,578],"[dispatch]",[3372,3388],"[props.itemData, types]",[2997,3026],"[props.typeData.description, props.typeData.new, props.typeData.pourcentagePromotion, props.typeData.promotion, props.typeData.ref, props.typeData.restock, props.typeData.store, props.typeData.title]"]